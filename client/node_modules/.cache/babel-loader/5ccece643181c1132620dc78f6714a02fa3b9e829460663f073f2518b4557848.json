{"ast":null,"code":"var _jsxFileName = \"/Users/fatima/Documents/bachelor-metchat/client/src/test_pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { authenticationRoute } from \"../APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    confirmEmail: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleValidation = () => {\n    const {\n      fname,\n      lname,\n      email,\n      confirmEmail,\n      password,\n      confirmPassword\n    } = values;\n    if (password !== confirmPassword) {\n      alert(\"Password and confirm password are not the same.\");\n      return false;\n    } else if (email !== confirmEmail) {\n      alert(\"E-mail and confirm e-mail should be same.\");\n      return false;\n    } else if (fname.length < 3) {\n      alert(\"Firstname should be at least 3 characters.\");\n      return false;\n    } else if (lname.length < 3) {\n      alert(\"Lastname should be at least 3 characters.\");\n      return false;\n    } else if (!/^[a-zA-Z()]+$/.test(fname) || !/^[a-zA-Z()]+$/.test(lname)) {\n      alert(\"Your name can only include letters within the english alphabet.\");\n      return false;\n    } else if (password.length < 8) {\n      alert(\"Password should be equal to or greater than 8 characters.\");\n      return false;\n    } else if (email === \"\") {\n      alert(\"Email is required.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (handleValidation()) {\n      const {\n        fname,\n        lname,\n        email,\n        password\n      } = values;\n      const {\n        data\n      } = await axios.post(`${authenticationRoute}/register`, {\n        firstName: fname,\n        lastName: lname,\n        email,\n        password\n      });\n      if (data.status === 500 || data.status === false) {\n        alert(data.msg);\n      } else if (data.status === true) {\n        localStorage.setItem(\"nlpchat-user\", JSON.stringify(data.user));\n        alert(\"User created\");\n      }\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registrer deg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"First name\",\n        name: \"fname\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Last name\",\n        name: \"lname\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        name: \"email\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email confirmation\",\n        name: \"confirmEmail\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        name: \"confirmPassword\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"TvO8K332EXdcYp8FD8vkmu+yeQs=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","authenticationRoute","Register","navigate","values","setValues","fname","lname","email","confirmEmail","password","confirmPassword","handleChange","event","target","name","value","handleValidation","alert","length","test","handleSubmit","preventDefault","data","post","firstName","lastName","status","msg","localStorage","setItem","JSON","stringify","user","e"],"sources":["/Users/fatima/Documents/bachelor-metchat/client/src/test_pages/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { authenticationRoute } from \"../APIRoutes\";\n\n\nexport default function Register() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        confirmEmail: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n  \n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };    \n  \n    const handleValidation = () => {\n        const { fname, lname, email, confirmEmail, password, confirmPassword } = values;\n        if (password !== confirmPassword) {\n            alert(\"Password and confirm password are not the same.\");\n            return false;\n        }\n        else if (email !== confirmEmail) {\n            alert(\"E-mail and confirm e-mail should be same.\",);\n            return false;   \n        }\n        else if (fname.length < 3) {\n            alert(\"Firstname should be at least 3 characters.\");\n            return false;\n        }\n        else if (lname.length < 3) {\n            alert(\"Lastname should be at least 3 characters.\");\n            return false;    \n        }\n        else if (!/^[a-zA-Z()]+$/.test(fname) || !/^[a-zA-Z()]+$/.test(lname)){\n            alert(\"Your name can only include letters within the english alphabet.\");\n            return false;    \n        }\n        else if (password.length < 8) {\n            alert(\"Password should be equal to or greater than 8 characters.\");\n            return false;\n        }\n        else if (email === \"\") {\n            alert(\"Email is required.\");\n            return false;\n        }\n        return true;\n    };\n  \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (handleValidation()) {\n            const { fname, lname, email, password } = values;\n            const { data } = await axios.post(`${authenticationRoute}/register`, {\n                firstName : fname,\n                lastName : lname,\n                email,\n                password,\n            });\n            \n            if (data.status === 500 || data.status === false) {\n                alert(data.msg);\n            }\n            else if (data.status === true) {\n                localStorage.setItem(\n                    \"nlpchat-user\",\n                    JSON.stringify(data.user)\n                );\n                alert(\"User created\");\n            }\n        };\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <h1>Registrer deg</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"First name\"\n                    name=\"fname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"Last name\"\n                    name=\"lname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email confirmation\"\n                    name=\"confirmEmail\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <button type=\"submit\">Register User</button>\n            </form>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}