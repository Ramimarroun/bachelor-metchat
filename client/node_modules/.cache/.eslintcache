[{"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\index.js":"1","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\App.js":"2","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\app\\account-context.js":"3","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx":"4","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx":"5","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Contacts.jsx":"6","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Chat.jsx":"7","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\admin\\Users.jsx":"8","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Profile.jsx":"9","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Welcome.jsx":"10","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\about.jsx":"11","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\shared\\protected.jsx":"12","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx":"13","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\account-api.js":"14","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\api.js":"15","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\APIRoutes.js":"16","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\contact-api.js":"17","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\config.js":"18","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx":"19","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\top-nav.jsx":"20","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\MainNav.jsx":"21","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\contact.jsx":"22","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\interesser.jsx":"23","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\nav.jsx":"24","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\login.jsx":"25","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\logo.js":"26","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\Flex.tsx":"27","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\Register.jsx":"28","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\messages.jsx":"29"},{"size":384,"mtime":1682880261381,"results":"30","hashOfConfig":"31"},{"size":2343,"mtime":1682951614715,"results":"32","hashOfConfig":"31"},{"size":3127,"mtime":1682887811518,"results":"33","hashOfConfig":"31"},{"size":8145,"mtime":1682948881197,"results":"34","hashOfConfig":"31"},{"size":3653,"mtime":1682623431723,"results":"35","hashOfConfig":"31"},{"size":3723,"mtime":1682890929343,"results":"36","hashOfConfig":"31"},{"size":7269,"mtime":1682623431720,"results":"37","hashOfConfig":"31"},{"size":2893,"mtime":1682948881198,"results":"38","hashOfConfig":"31"},{"size":1797,"mtime":1682951413653,"results":"39","hashOfConfig":"31"},{"size":8055,"mtime":1682950719986,"results":"40","hashOfConfig":"31"},{"size":588,"mtime":1681568238990,"results":"41","hashOfConfig":"31"},{"size":1250,"mtime":1682880714198,"results":"42","hashOfConfig":"31"},{"size":333,"mtime":1682882813213,"results":"43","hashOfConfig":"31"},{"size":534,"mtime":1682888693186,"results":"44","hashOfConfig":"31"},{"size":425,"mtime":1682888789140,"results":"45","hashOfConfig":"31"},{"size":473,"mtime":1682948881192,"results":"46","hashOfConfig":"31"},{"size":182,"mtime":1681476782873,"results":"47","hashOfConfig":"31"},{"size":220,"mtime":1682888554327,"results":"48","hashOfConfig":"31"},{"size":1870,"mtime":1682623431710,"results":"49","hashOfConfig":"31"},{"size":2159,"mtime":1682951059457,"results":"50","hashOfConfig":"31"},{"size":2076,"mtime":1682623431712,"results":"51","hashOfConfig":"31"},{"size":462,"mtime":1681566137134,"results":"52","hashOfConfig":"31"},{"size":109,"mtime":1681566735679,"results":"53","hashOfConfig":"31"},{"size":434,"mtime":1681568106892,"results":"54","hashOfConfig":"31"},{"size":4188,"mtime":1682950483325,"results":"55","hashOfConfig":"31"},{"size":224,"mtime":1682882405574,"results":"56","hashOfConfig":"31"},{"size":872,"mtime":1678912573140,"results":"57","hashOfConfig":"31"},{"size":5654,"mtime":1682890329756,"results":"58","hashOfConfig":"31"},{"size":3386,"mtime":1681568675990,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"12o7o21",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"63"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\index.js",[],[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\App.js",["154"],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\app\\account-context.js",["155"],[],"import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const accountStatuses = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n    Forbidden: \"forbidden\",\r\n};\r\n\r\nexport const AccountContext = createContext();\r\n\r\nexport const useAccount = () => useContext(AccountContext);\r\n\r\nexport const AccountProvider = (props) => {\r\n    const [data, setData] = useState({\r\n        status: \"\",\r\n        displayName: \"\",\r\n    });\r\n\r\n    function logout(sync) {\r\n        if (!api.token) return;\r\n        if (sync) {\r\n            accountApi.logout();\r\n            api.token = null;\r\n        }\r\n        api.token = null;\r\n        account.setStatus(accountStatuses.LoggedOut);\r\n    }\r\n\r\n    const account = {\r\n        userName: data.email,\r\n        displayName: data.displayName,\r\n\r\n        isUnAuthorized: () => api.token === null,\r\n        getStatus: () => data.status,\r\n        isConnected: () => data.status === accountStatuses.Connected,\r\n        isConnecting: () => data.status === accountStatuses.Connecting,\r\n\r\n        setStatus: (value) => setData({ ...data, status: value }),\r\n\r\n        init: () => {\r\n            account.setStatus(accountStatuses.Connecting);\r\n            return new Promise((resolve, reject) => {\r\n                accountApi\r\n                    .userInfo()\r\n                    .then((result) => {\r\n                        api.token = result.data.token;\r\n                        api.expiry = result.data.expiry;\r\n                        var x = {\r\n                            status: accountStatuses.Connected,\r\n                            displayName: result.data.displayName,\r\n                            userName: result.data.email,\r\n                        };\r\n                        setData(x);\r\n\r\n                        resolve(x);\r\n                    })\r\n                    .catch(reject);\r\n            });\r\n        },\r\n\r\n        login: (userName, password) =>\r\n            new Promise((resolve, reject) => {\r\n                accountApi\r\n                    .login(userName, password)\r\n                    .then((result) => {\r\n                        api.token = result.data.token;\r\n                        api.expiry = result.data.expiry;\r\n                        setData({\r\n                            status: accountStatuses.Connected,\r\n                            displayName: result.data.displayName,\r\n                            userName: result.data.email,\r\n                        });\r\n                        resolve(result);\r\n                    })\r\n                    .catch(reject);\r\n            }),\r\n        logout: () => logout(true),\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (account.getStatus() === null) return;\r\n        // api.onUnauthorized(() => account.setAsLoggedOut());\r\n    }, [api, account]);\r\n\r\n    return (\r\n        <AccountContext.Provider value={account}>\r\n            {props.children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx",["156"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { CSVLink } from \"react-csv\";\r\nimport { contactRoute, conversationRoute } from \"../APIRoutes\";\r\n\r\nimport AdminNav from \"../components/AdminNav\";\r\nimport dummyProfile from \"../assets/img/profile.svg\";\r\n\r\nexport default function Conversations() {\r\n  const navigate = useNavigate(),\r\n    [self, setSelf] = useState({}),\r\n    [conversations, setConversations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\r\n      else {\r\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\r\n        setSelf(data);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  // get conversations\r\n  useEffect(() => {\r\n    async function getConversations() {\r\n      await axios\r\n        .get(`${conversationRoute}/getAllConversations`)\r\n        .then(async (response) => {\r\n          const conversations = response.data,\r\n            count = conversations.length;\r\n\r\n          for (let i = 0; i < count; i++) {\r\n            const date = new Date(conversations[i].createdAt),\r\n              year = date.getFullYear();\r\n            let month = date.getMonth() + 1,\r\n              day = date.getDate(),\r\n              hour = date.getHours(),\r\n              minute = date.getMinutes();\r\n\r\n            if (month < 10) month = \"0\" + month;\r\n            if (day < 10) day = \"0\" + day;\r\n            if (hour < 10) hour = \"0\" + hour;\r\n            if (minute < 10) minute = \"0\" + minute;\r\n\r\n            conversations[\r\n              i\r\n            ].createdAtText = `${day}/${month}/${year} - ${hour}:${minute}`;\r\n\r\n            await axios\r\n              .get(`${contactRoute}/getUser`, {\r\n                params: { id: conversations[i].fromId },\r\n              })\r\n              .then((response) => {\r\n                conversations[i][\"fromData\"] = response.data;\r\n              })\r\n              .catch((err) => {\r\n                conversations[i][\"fromData\"] = [];\r\n                alert(err.response.data);\r\n              });\r\n\r\n            await axios\r\n              .get(`${contactRoute}/getUser`, {\r\n                params: { id: conversations[i].toId },\r\n              })\r\n              .then((response) => {\r\n                conversations[i][\"toData\"] = response.data;\r\n              })\r\n              .catch((err) => {\r\n                conversations[i][\"toData\"] = [];\r\n                alert(err.response.data);\r\n              });\r\n          }\r\n          setConversations(conversations);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(err.response.data);\r\n        });\r\n    }\r\n    getConversations();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <AdminNav />\r\n      <div className=\"admin-convos\">\r\n        <section>\r\n          <h1>Samtaler</h1>\r\n\r\n          {/*<!-- Search bar -->\r\n          <!-- Retrived from https://mdbootstrap.com/docs/standard/forms/search/-->*/}\r\n          <div className=\"search-group input-group rounded\">\r\n            <input\r\n              type=\"search\"\r\n              className=\"form-control rounded\"\r\n              placeholder=\"Søk\"\r\n              aria-label=\"Search\"\r\n              aria-describedby=\"search-addon\"\r\n            />\r\n            <button type=\"button\" className=\"btn btn-outline-primary\">\r\n              søk\r\n            </button>\r\n            <p>\r\n              Sorter etter:\r\n              <select defaultValue={\"\"}>\r\n                <option value=\"\" disabled hidden>\r\n                  Velg\r\n                </option>\r\n                <option value=\"dato\">Dato</option>\r\n                <option value=\"navn\">Navn</option>\r\n              </select>\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n        {/*<!-- List of conversetions -->*/}\r\n        <div className=\"row conversation-list\">\r\n          {conversations.map((conversation, i) => (\r\n            <div key={i} className=\"col-sm-6 \">\r\n              {/*<!-- Conversation participants -->*/}\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  {/*<!-- Date -->*/}\r\n                  <a className=\"convo-date\" href=\"./samtaler\">\r\n                    {conversation.createdAtText}\r\n                  </a>\r\n                  {/*<!-- Conversation participants -->*/}\r\n                  <div className=\"participants\">\r\n                    <div className=\"participant\">\r\n                      <img\r\n                        src={dummyProfile}\r\n                        alt=\"P\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <p className=\"fw-bold mb-1\">\r\n                          {conversation.fromData.firstName}{\" \"}\r\n                          {conversation.fromData.lastName}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"participant d-flex align-items-center\">\r\n                      <img\r\n                        src={dummyProfile}\r\n                        alt=\"P\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <p className=\"fw-bold mb-1\">\r\n                          {conversation.toData.firstName}{\" \"}\r\n                          {conversation.toData.lastName}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/*<!-- Buttons -->*/}\r\n                  <div className=\"text-end\">\r\n                    <button className=\"btn-download btn-link btn-rounded btn-sm\">\r\n                      Last ned samtale\r\n                    </button>\r\n                    <button className=\"btn-delete btn-link btn-rounded btn-sm\">\r\n                      Slett samtale\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/*<!-- List of conversetions -->*/}\r\n        <div className=\"row conversation-list\">\r\n          <div className=\"col-sm-6 \">\r\n            {/*<!-- Conversation participants -->*/}\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                {/*<!-- Date -->*/}\r\n                <a className=\"convo-date\" href=\"./samtaler\">\r\n                  Dato\r\n                </a>\r\n                {/*<!-- Conversation participants -->*/}\r\n                <div className=\"participants\">\r\n                  <div className=\"participant\">\r\n                    <img\r\n                      src={dummyProfile}\r\n                      alt=\"P\"\r\n                      className=\"rounded-circle\"\r\n                    />\r\n                    <div className=\"ms-3\">\r\n                      <p className=\"fw-bold mb-1\">Person En</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"participant d-flex align-items-center\">\r\n                    <img\r\n                      src={dummyProfile}\r\n                      alt=\"P\"\r\n                      className=\"rounded-circle\"\r\n                    />\r\n                    <div className=\"ms-3\">\r\n                      <p className=\"fw-bold mb-1\">Person To</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/*<!-- Buttons -->*/}\r\n                <div className=\"text-end\">\r\n                  <button className=\"btn-download btn-link btn-rounded btn-sm\">\r\n                    Last ned samtale\r\n                  </button>\r\n                  <button className=\"btn-delete btn-link btn-rounded btn-sm\">\r\n                    Slett samtale\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"master-buttons\">\r\n          <button className=\"btn-download-all\">Last ned alle</button>\r\n          <button className=\"btn-delete-all\">Slett alle</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx",["157","158","159","160"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { /*Link,*/ useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { profileRoute } from \"../APIRoutes\";\r\nimport MainNav from \"../components/MainNav\";\r\n\r\nexport default function MoreInfo() {\r\n  const navigate = useNavigate(),\r\n    [user, setUser] = useState(undefined),\r\n    [userName, setUserName] = useState(undefined);\r\n\r\n  const [values, setValues] = useState({\r\n    bio: \"\",\r\n    interests: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\r\n      else {\r\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\r\n        setUser(data);\r\n        setUserName(data.firstName);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { bio, interests } = values;\r\n    if (bio.length < 5) {\r\n      alert(\"Bio is too short.\");\r\n      return false;\r\n    }\r\n    /*else if (interests.length < 3) {\r\n            alert(\"Select at least three interests\",);\r\n            return false;   \r\n        }*/\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      console.log(`${profileRoute}/edit`);\r\n      const { bio /*, interests*/ } = values;\r\n      await axios\r\n        .post(`${profileRoute}/edit`, {\r\n          userId: user._id,\r\n          bio,\r\n          avatarImage: \"\",\r\n          //interests,\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          alert(\"Profile created\");\r\n          //navigate(\"/contacts\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      <section id=\"more-info\">\r\n        <h1>Snart ferdig. Fortell oss litt om deg selv</h1>\r\n        <img class=\"profile-icon\" src=\"profile.svg\" alt=\"profile-icon\" />\r\n        <form class=\"box\" id=\"infoForm\" onSubmit={(e) => handleSubmit(e)}>\r\n          <label class=\"text\">Om Meg</label>\r\n          <textarea name=\"bio\" onChange={(e) => handleChange(e)}></textarea>\r\n          <h2>Intresser</h2>\r\n          <div class=\"btns-odd\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Mat\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Knust\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Litratur\r\n            </button>\r\n          </div>\r\n          <div class=\"btns-even\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Idrett\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Dyr\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Språk\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Musikk\r\n            </button>\r\n          </div>\r\n          <div class=\"showMore\">\r\n            <a href=\"\">\r\n              <IoIosAdd />\r\n            </a>\r\n            <button>Vis flere</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <div class=\"btns\">\r\n        <button>Tilbake</button>\r\n        <a href=\"\">\r\n          <button type=\"submit\" form=\"infoForm\">\r\n            Gå Videre\r\n          </button>\r\n        </a>\r\n      </div>\r\n\r\n      <footer>\r\n        <p>Laget av Rami, Narges, Aina Og Fatima</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Contacts.jsx",["161","162","163"],[],"import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { contactApi } from \"../api/contact-api\";\r\nimport mail from \"../assets/img/mail.jpg\";\r\nimport pluss from \"../assets/img/pluss.svg\";\r\nimport profile from \"../assets/img/profile.svg\";\r\nimport { Flex } from \"../components/Flex\";\r\nimport { TopNav } from \"../components/top-nav\";\r\n\r\nexport const Contacts = () => {\r\n    var contacts = [\r\n        {\r\n            name: \"Sara\",\r\n            email: \"sara@gmail.com\",\r\n            intersts: [\r\n                {\r\n                    id: \"1\",\r\n                    name: \"Mat\",\r\n                },\r\n                {\r\n                    id: \"2\",\r\n                    name: \"Knust\",\r\n                },\r\n                {\r\n                    id: \"3\",\r\n                    name: \"Litratur\",\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            name: \"Ali\",\r\n            email: \"sara@gmail.com\",\r\n            intersts: [\r\n                {\r\n                    id: \"1\",\r\n                    name: \"Mat\",\r\n                },\r\n                {\r\n                    id: \"2\",\r\n                    name: \"Knust\",\r\n                },\r\n                {\r\n                    id: \"3\",\r\n                    name: \"Litratur\",\r\n                },\r\n            ],\r\n        },\r\n    ];\r\n    const [model, setModel] = useState();\r\n\r\n    useEffect(() => {\r\n        if (model) return;\r\n\r\n        contactApi\r\n            .myContacts()\r\n            .then((result) => {\r\n                setModel({ contacts: result.contacts });\r\n            })\r\n            .catch(() => alert(\"error\"));\r\n    }, [model]);\r\n    return (\r\n        <>\r\n            <TopNav />\r\n\r\n            <section id=\"first\">\r\n                <h1>Find Contacts</h1>\r\n                <hr />\r\n                <input\r\n                    type=\"search\"\r\n                    className=\"form-control rounded\"\r\n                    placeholder=\"Search\"\r\n                    aria-label=\"Search\"\r\n                    aria-describedby=\"search-addon\"\r\n                ></input>\r\n            </section>\r\n            <Flex>\r\n                <div className=\"flex-grow-1 ps-3\" style={{ maxWidth: 350 }}>\r\n                    <h5>search...</h5>\r\n                    <hr />\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control rounded\"\r\n                        placeholder=\"Search\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"search-addon\"\r\n                    ></input>\r\n                </div>\r\n                <section id=\"second\" className=\"ps-5\">\r\n                    {contacts.map((x) => (\r\n                        <React.Fragment>\r\n                            <Contact\r\n                                contact={x}\r\n                                pluss={pluss}\r\n                                mail={mail}\r\n                                profile={profile}\r\n                            />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </section>\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Contact = ({ contact, pluss, mail, profile }) => {\r\n    return (\r\n        <>\r\n            <Flex className=\"info\" align=\"center\" content=\"space-between\">\r\n                <img src={profile} className=\"profile\" />\r\n                <span>{contact.name}</span>\r\n                <img src={pluss} className=\"pluss\" />\r\n                <img src={mail} className=\"mail\" />\r\n            </Flex>\r\n            <div className=\"intersts\">\r\n                {contact.intersts?.map((x) => (\r\n                    <button className=\"btn\">{x.name}</button>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Chat.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\admin\\Users.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Profile.jsx",["164"],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\Welcome.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\about.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\shared\\protected.jsx",["165","166"],[],"import { useEffect } from \"react\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport { accountStatuses, useAccount } from \"../app/account-context\";\r\nimport { Flex } from \"../components/Flex\";\r\nimport { Nav } from \"../components/nav\";\r\n\r\nexport function Protected() {\r\n    const account = useAccount();\r\n    const history = useNavigate();\r\n    useEffect(() => {\r\n        if (account.getStatus() === \"\") account.init();\r\n    }, []);\r\n\r\n    if (account.isUnAuthorized())\r\n        return (\r\n            <>\r\n                <Nav />\r\n                <Flex\r\n                    align=\"center\"\r\n                    content=\"center\"\r\n                    className=\"p-5\"\r\n                    vertical\r\n                    gap={1}\r\n                >\r\n                    <span as=\"div\">We cannot authenticate you</span>\r\n                    <button className=\"btn m-0\" onClick={() => history(\"/\")}>\r\n                        Login\r\n                    </button>\r\n                </Flex>\r\n            </>\r\n        );\r\n\r\n    return (\r\n        <>\r\n            {account.getStatus() == accountStatuses.Connecting && (\r\n                <div>Connecting...</div>\r\n            )}\r\n            {account.isConnected() && <Outlet />}\r\n        </>\r\n    );\r\n}\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\account-api.js",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\api.js",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\APIRoutes.js",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\contact-api.js",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\api\\config.js",["167"],[],"const host = \"http://localhost:\" + \"8088\";\r\n\r\nexport const apiConfig = {\r\n    localeUrl: host,\r\n    accountUrl: host + \"/authentication\",\r\n    contactUrl: host + \"/contacts\",\r\n    interestsUrl: host + \"/interests\",\r\n};\r\n","D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\top-nav.jsx",["168","169","170"],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\MainNav.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\contact.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\interesser.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\nav.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\login.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\logo.js",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\Flex.tsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\components\\Register.jsx",[],[],"D:\\Projects\\bachelor-metchat-old\\bachelor-metchat\\client\\src\\main\\messages.jsx",["171","172","173"],[],{"ruleId":"174","severity":1,"message":"175","line":5,"column":8,"nodeType":"176","messageId":"177","endLine":5,"endColumn":12},{"ruleId":"178","severity":1,"message":"179","line":88,"column":8,"nodeType":"180","endLine":88,"endColumn":22,"suggestions":"181"},{"ruleId":"174","severity":1,"message":"182","line":12,"column":6,"nodeType":"176","messageId":"177","endLine":12,"endColumn":10},{"ruleId":"174","severity":1,"message":"183","line":11,"column":6,"nodeType":"176","messageId":"177","endLine":11,"endColumn":14},{"ruleId":"174","severity":1,"message":"184","line":35,"column":18,"nodeType":"176","messageId":"177","endLine":35,"endColumn":27},{"ruleId":"185","severity":1,"message":"186","line":106,"column":13,"nodeType":"187","endLine":106,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":115,"column":9,"nodeType":"187","endLine":115,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":109,"column":17,"nodeType":"187","endLine":109,"endColumn":58},{"ruleId":"188","severity":1,"message":"189","line":111,"column":17,"nodeType":"187","endLine":111,"endColumn":54},{"ruleId":"188","severity":1,"message":"189","line":112,"column":17,"nodeType":"187","endLine":112,"endColumn":52},{"ruleId":"174","severity":1,"message":"190","line":8,"column":9,"nodeType":"176","messageId":"177","endLine":8,"endColumn":16},{"ruleId":"178","severity":1,"message":"191","line":12,"column":8,"nodeType":"180","endLine":12,"endColumn":10,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":35,"column":34,"nodeType":"195","messageId":"196","endLine":35,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":1,"column":34,"nodeType":"195","messageId":"199","endLine":1,"endColumn":35},{"ruleId":"193","severity":1,"message":"194","line":19,"column":50,"nodeType":"195","messageId":"196","endLine":19,"endColumn":52},{"ruleId":"193","severity":1,"message":"194","line":29,"column":50,"nodeType":"195","messageId":"196","endLine":29,"endColumn":52},{"ruleId":"193","severity":1,"message":"194","line":39,"column":50,"nodeType":"195","messageId":"196","endLine":39,"endColumn":52},{"ruleId":"188","severity":1,"message":"189","line":56,"column":21,"nodeType":"187","endLine":56,"endColumn":39},{"ruleId":"185","severity":1,"message":"186","line":64,"column":29,"nodeType":"187","endLine":64,"endColumn":40},{"ruleId":"185","severity":1,"message":"186","line":77,"column":29,"nodeType":"187","endLine":77,"endColumn":40},"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array. Outer scope values like 'api' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["200"],"'self' is assigned a value but never used.","'userName' is assigned a value but never used.","'interests' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'account' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["201"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},"Update the dependencies array to be: [account]",{"range":"205","text":"206"},{"range":"207","text":"206"},[2964,2978],"[account]",[441,443]]