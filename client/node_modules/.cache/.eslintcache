[{"D:\\Projects\\bachelor-metchat\\client\\src\\index.js":"1","D:\\Projects\\bachelor-metchat\\client\\src\\App.js":"2","D:\\Projects\\bachelor-metchat\\client\\src\\app\\account-context.js":"3","D:\\Projects\\bachelor-metchat\\client\\src\\api\\account-api.js":"4","D:\\Projects\\bachelor-metchat\\client\\src\\api\\api.js":"5","D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx":"6","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Chat.jsx":"7","D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Users.jsx":"8","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Contacts.jsx":"9","D:\\Projects\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx":"10","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Profile.jsx":"11","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Welcome.jsx":"12","D:\\Projects\\bachelor-metchat\\client\\src\\main\\about.jsx":"13","D:\\Projects\\bachelor-metchat\\client\\src\\main\\messages.jsx":"14","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\protected.jsx":"15","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx":"16","D:\\Projects\\bachelor-metchat\\client\\src\\api\\config.js":"17","D:\\Projects\\bachelor-metchat\\client\\src\\APIRoutes.js":"18","D:\\Projects\\bachelor-metchat\\client\\src\\api\\contact-api.js":"19","D:\\Projects\\bachelor-metchat\\client\\src\\components\\Flex.tsx":"20","D:\\Projects\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx":"21","D:\\Projects\\bachelor-metchat\\client\\src\\components\\MainNav.jsx":"22","D:\\Projects\\bachelor-metchat\\client\\src\\components\\top-nav.jsx":"23","D:\\Projects\\bachelor-metchat\\client\\src\\components\\contact.jsx":"24","D:\\Projects\\bachelor-metchat\\client\\src\\components\\nav.jsx":"25","D:\\Projects\\bachelor-metchat\\client\\src\\components\\interesser.jsx":"26","D:\\Projects\\bachelor-metchat\\client\\src\\components\\login.jsx":"27","D:\\Projects\\bachelor-metchat\\client\\src\\components\\Register.jsx":"28","D:\\Projects\\bachelor-metchat\\client\\src\\components\\logo.js":"29","D:\\Projects\\bachelor-metchat\\client\\src\\main\\interests.jsx":"30","D:\\Projects\\bachelor-metchat\\client\\src\\api\\profile-api.js":"31"},{"size":384,"mtime":1682880261381,"results":"32","hashOfConfig":"33"},{"size":2414,"mtime":1682954447015,"results":"34","hashOfConfig":"33"},{"size":3127,"mtime":1682887811518,"results":"35","hashOfConfig":"33"},{"size":628,"mtime":1683054312508,"results":"36","hashOfConfig":"33"},{"size":425,"mtime":1683055332091,"results":"37","hashOfConfig":"33"},{"size":8145,"mtime":1682948881197,"results":"38","hashOfConfig":"33"},{"size":7269,"mtime":1682623431720,"results":"39","hashOfConfig":"33"},{"size":2893,"mtime":1682948881198,"results":"40","hashOfConfig":"33"},{"size":3832,"mtime":1683061789759,"results":"41","hashOfConfig":"33"},{"size":3653,"mtime":1682623431723,"results":"42","hashOfConfig":"33"},{"size":2621,"mtime":1683057103785,"results":"43","hashOfConfig":"33"},{"size":3431,"mtime":1683050202869,"results":"44","hashOfConfig":"33"},{"size":588,"mtime":1681568238990,"results":"45","hashOfConfig":"33"},{"size":3386,"mtime":1681568675990,"results":"46","hashOfConfig":"33"},{"size":1348,"mtime":1683052714657,"results":"47","hashOfConfig":"33"},{"size":333,"mtime":1682882813213,"results":"48","hashOfConfig":"33"},{"size":256,"mtime":1683055261471,"results":"49","hashOfConfig":"33"},{"size":473,"mtime":1682948881192,"results":"50","hashOfConfig":"33"},{"size":345,"mtime":1683061695668,"results":"51","hashOfConfig":"33"},{"size":872,"mtime":1678912573140,"results":"52","hashOfConfig":"33"},{"size":1870,"mtime":1682623431710,"results":"53","hashOfConfig":"33"},{"size":2076,"mtime":1682623431712,"results":"54","hashOfConfig":"33"},{"size":2630,"mtime":1683054035276,"results":"55","hashOfConfig":"33"},{"size":1000,"mtime":1683061486322,"results":"56","hashOfConfig":"33"},{"size":434,"mtime":1681568106892,"results":"57","hashOfConfig":"33"},{"size":113,"mtime":1683056047160,"results":"58","hashOfConfig":"33"},{"size":4188,"mtime":1682950483325,"results":"59","hashOfConfig":"33"},{"size":10410,"mtime":1682954294315,"results":"60","hashOfConfig":"33"},{"size":224,"mtime":1682882405574,"results":"61","hashOfConfig":"33"},{"size":2479,"mtime":1681496652705,"results":"62","hashOfConfig":"33"},{"size":166,"mtime":1683055351790,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"1eytzui",{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"67"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"67"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"D:\\Projects\\bachelor-metchat\\client\\src\\index.js",[],[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\App.js",["166"],[],"// lager lenke til test register-filen for å teste tilkobling mellom backend og frontend\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\nimport Conversations from \"./admin/Conversations\";\r\nimport Users from \"./admin/Users\";\r\nimport Chat from \"./main/Chat\";\r\n\r\nimport { Protected } from \"./shared/protected\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/admin_brukere.css\";\r\nimport \"./assets/css/admin_samtaler.css\";\r\nimport \"./assets/css/chat.css\";\r\nimport \"./assets/css/contacts.css\";\r\nimport \"./assets/css/home.css\";\r\nimport \"./assets/css/interests.css\";\r\nimport \"./assets/css/nav.css\";\r\nimport \"./assets/css/profile.css\";\r\nimport \"./assets/css/index.css\";\r\nimport \"./assets/css/style.css\";\r\nimport \"./assets/css/app.css\";\r\nimport { PublicLayout } from \"./shared/public-layout\";\r\nimport { Contacts } from \"./main/Contacts\";\r\nimport MoreInfo from \"./main/MoreInfo\";\r\nimport { Profile } from \"./main/Profile\";\r\nimport { Welcome } from \"./main/Welcome\";\r\nimport { About } from \"./main/about\";\r\nimport { useAccount } from \"./app/account-context\";\r\nimport { Messages } from \"./main/messages\";\r\nimport { Interests } from \"./main/interests\";\r\n\r\nexport default function App() {\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={<PublicLayout />}>\r\n                <Route path=\"/logout\" element={<Logout />} />\r\n                <Route path=\"/\" element={<Welcome />} />\r\n\r\n                {/* to handle user is login or not */}\r\n                <Route element={<Protected />}>\r\n                    <Route path=\"/kontakter\" element={<Contacts />} />\r\n                    <Route path=\"/about\" element={<About />} />\r\n                    <Route path=\"/merInfo\" element={<MoreInfo />} />\r\n                    <Route path=\"/samtaler\" element={<Messages />} />\r\n                    <Route path=\"/profil\" element={<Profile />} />\r\n                    <Route path=\"/interests\" element={<Interests />} />\r\n\r\n                    {/* Admin Routes */}\r\n                    <Route path=\"/admin/brukere\" element={<Users />} />\r\n                    <Route path=\"/admin/samtaler\" element={<Conversations />} />\r\n                </Route>\r\n            </Route>\r\n        </Routes>\r\n    );\r\n}\r\n\r\nconst Logout = () => {\r\n    const account = useAccount();\r\n    account.logout();\r\n    return <Navigate to=\"/\" />;\r\n};\r\n\r\n// Bruke Bootsrap Grid system for å gjøre sidene responsive\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\app\\account-context.js",["167"],[],"import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const accountStatuses = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n    Forbidden: \"forbidden\",\r\n};\r\n\r\nexport const AccountContext = createContext();\r\n\r\nexport const useAccount = () => useContext(AccountContext);\r\n\r\nexport const AccountProvider = (props) => {\r\n    const [data, setData] = useState({\r\n        status: \"\",\r\n        displayName: \"\",\r\n    });\r\n\r\n    function logout(sync) {\r\n        if (!api.token) return;\r\n        if (sync) {\r\n            accountApi.logout();\r\n            api.token = null;\r\n        }\r\n        api.token = null;\r\n        account.setStatus(accountStatuses.LoggedOut);\r\n    }\r\n\r\n    const account = {\r\n        userName: data.email,\r\n        displayName: data.displayName,\r\n\r\n        isUnAuthorized: () => api.token === null,\r\n        getStatus: () => data.status,\r\n        isConnected: () => data.status === accountStatuses.Connected,\r\n        isConnecting: () => data.status === accountStatuses.Connecting,\r\n\r\n        setStatus: (value) => setData({ ...data, status: value }),\r\n\r\n        init: () => {\r\n            account.setStatus(accountStatuses.Connecting);\r\n            return new Promise((resolve, reject) => {\r\n                accountApi\r\n                    .userInfo()\r\n                    .then((result) => {\r\n                        api.token = result.data.token;\r\n                        api.expiry = result.data.expiry;\r\n                        var x = {\r\n                            status: accountStatuses.Connected,\r\n                            displayName: result.data.displayName,\r\n                            userName: result.data.email,\r\n                        };\r\n                        setData(x);\r\n\r\n                        resolve(x);\r\n                    })\r\n                    .catch(reject);\r\n            });\r\n        },\r\n\r\n        login: (userName, password) =>\r\n            new Promise((resolve, reject) => {\r\n                accountApi\r\n                    .login(userName, password)\r\n                    .then((result) => {\r\n                        api.token = result.data.token;\r\n                        api.expiry = result.data.expiry;\r\n                        setData({\r\n                            status: accountStatuses.Connected,\r\n                            displayName: result.data.displayName,\r\n                            userName: result.data.email,\r\n                        });\r\n                        resolve(result);\r\n                    })\r\n                    .catch(reject);\r\n            }),\r\n        logout: () => logout(true),\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (account.getStatus() === null) return;\r\n        // api.onUnauthorized(() => account.setAsLoggedOut());\r\n    }, [api, account]);\r\n\r\n    return (\r\n        <AccountContext.Provider value={account}>\r\n            {props.children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\api\\account-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\api.js",[],[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx",["168"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { CSVLink } from \"react-csv\";\r\nimport { contactRoute, conversationRoute } from \"../APIRoutes\";\r\n\r\nimport AdminNav from \"../components/AdminNav\";\r\nimport dummyProfile from \"../assets/img/profile.svg\";\r\n\r\nexport default function Conversations() {\r\n  const navigate = useNavigate(),\r\n    [self, setSelf] = useState({}),\r\n    [conversations, setConversations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\r\n      else {\r\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\r\n        setSelf(data);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  // get conversations\r\n  useEffect(() => {\r\n    async function getConversations() {\r\n      await axios\r\n        .get(`${conversationRoute}/getAllConversations`)\r\n        .then(async (response) => {\r\n          const conversations = response.data,\r\n            count = conversations.length;\r\n\r\n          for (let i = 0; i < count; i++) {\r\n            const date = new Date(conversations[i].createdAt),\r\n              year = date.getFullYear();\r\n            let month = date.getMonth() + 1,\r\n              day = date.getDate(),\r\n              hour = date.getHours(),\r\n              minute = date.getMinutes();\r\n\r\n            if (month < 10) month = \"0\" + month;\r\n            if (day < 10) day = \"0\" + day;\r\n            if (hour < 10) hour = \"0\" + hour;\r\n            if (minute < 10) minute = \"0\" + minute;\r\n\r\n            conversations[\r\n              i\r\n            ].createdAtText = `${day}/${month}/${year} - ${hour}:${minute}`;\r\n\r\n            await axios\r\n              .get(`${contactRoute}/getUser`, {\r\n                params: { id: conversations[i].fromId },\r\n              })\r\n              .then((response) => {\r\n                conversations[i][\"fromData\"] = response.data;\r\n              })\r\n              .catch((err) => {\r\n                conversations[i][\"fromData\"] = [];\r\n                alert(err.response.data);\r\n              });\r\n\r\n            await axios\r\n              .get(`${contactRoute}/getUser`, {\r\n                params: { id: conversations[i].toId },\r\n              })\r\n              .then((response) => {\r\n                conversations[i][\"toData\"] = response.data;\r\n              })\r\n              .catch((err) => {\r\n                conversations[i][\"toData\"] = [];\r\n                alert(err.response.data);\r\n              });\r\n          }\r\n          setConversations(conversations);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          alert(err.response.data);\r\n        });\r\n    }\r\n    getConversations();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <AdminNav />\r\n      <div className=\"admin-convos\">\r\n        <section>\r\n          <h1>Samtaler</h1>\r\n\r\n          {/*<!-- Search bar -->\r\n          <!-- Retrived from https://mdbootstrap.com/docs/standard/forms/search/-->*/}\r\n          <div className=\"search-group input-group rounded\">\r\n            <input\r\n              type=\"search\"\r\n              className=\"form-control rounded\"\r\n              placeholder=\"Søk\"\r\n              aria-label=\"Search\"\r\n              aria-describedby=\"search-addon\"\r\n            />\r\n            <button type=\"button\" className=\"btn btn-outline-primary\">\r\n              søk\r\n            </button>\r\n            <p>\r\n              Sorter etter:\r\n              <select defaultValue={\"\"}>\r\n                <option value=\"\" disabled hidden>\r\n                  Velg\r\n                </option>\r\n                <option value=\"dato\">Dato</option>\r\n                <option value=\"navn\">Navn</option>\r\n              </select>\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n        {/*<!-- List of conversetions -->*/}\r\n        <div className=\"row conversation-list\">\r\n          {conversations.map((conversation, i) => (\r\n            <div key={i} className=\"col-sm-6 \">\r\n              {/*<!-- Conversation participants -->*/}\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  {/*<!-- Date -->*/}\r\n                  <a className=\"convo-date\" href=\"./samtaler\">\r\n                    {conversation.createdAtText}\r\n                  </a>\r\n                  {/*<!-- Conversation participants -->*/}\r\n                  <div className=\"participants\">\r\n                    <div className=\"participant\">\r\n                      <img\r\n                        src={dummyProfile}\r\n                        alt=\"P\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <p className=\"fw-bold mb-1\">\r\n                          {conversation.fromData.firstName}{\" \"}\r\n                          {conversation.fromData.lastName}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"participant d-flex align-items-center\">\r\n                      <img\r\n                        src={dummyProfile}\r\n                        alt=\"P\"\r\n                        className=\"rounded-circle\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <p className=\"fw-bold mb-1\">\r\n                          {conversation.toData.firstName}{\" \"}\r\n                          {conversation.toData.lastName}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/*<!-- Buttons -->*/}\r\n                  <div className=\"text-end\">\r\n                    <button className=\"btn-download btn-link btn-rounded btn-sm\">\r\n                      Last ned samtale\r\n                    </button>\r\n                    <button className=\"btn-delete btn-link btn-rounded btn-sm\">\r\n                      Slett samtale\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/*<!-- List of conversetions -->*/}\r\n        <div className=\"row conversation-list\">\r\n          <div className=\"col-sm-6 \">\r\n            {/*<!-- Conversation participants -->*/}\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                {/*<!-- Date -->*/}\r\n                <a className=\"convo-date\" href=\"./samtaler\">\r\n                  Dato\r\n                </a>\r\n                {/*<!-- Conversation participants -->*/}\r\n                <div className=\"participants\">\r\n                  <div className=\"participant\">\r\n                    <img\r\n                      src={dummyProfile}\r\n                      alt=\"P\"\r\n                      className=\"rounded-circle\"\r\n                    />\r\n                    <div className=\"ms-3\">\r\n                      <p className=\"fw-bold mb-1\">Person En</p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"participant d-flex align-items-center\">\r\n                    <img\r\n                      src={dummyProfile}\r\n                      alt=\"P\"\r\n                      className=\"rounded-circle\"\r\n                    />\r\n                    <div className=\"ms-3\">\r\n                      <p className=\"fw-bold mb-1\">Person To</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/*<!-- Buttons -->*/}\r\n                <div className=\"text-end\">\r\n                  <button className=\"btn-download btn-link btn-rounded btn-sm\">\r\n                    Last ned samtale\r\n                  </button>\r\n                  <button className=\"btn-delete btn-link btn-rounded btn-sm\">\r\n                    Slett samtale\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"master-buttons\">\r\n          <button className=\"btn-download-all\">Last ned alle</button>\r\n          <button className=\"btn-delete-all\">Slett alle</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Chat.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Users.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\Contacts.jsx",["169","170","171","172"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx",["173","174","175","176"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { /*Link,*/ useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { profileRoute } from \"../APIRoutes\";\r\nimport MainNav from \"../components/MainNav\";\r\n\r\nexport default function MoreInfo() {\r\n  const navigate = useNavigate(),\r\n    [user, setUser] = useState(undefined),\r\n    [userName, setUserName] = useState(undefined);\r\n\r\n  const [values, setValues] = useState({\r\n    bio: \"\",\r\n    interests: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\r\n      else {\r\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\r\n        setUser(data);\r\n        setUserName(data.firstName);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { bio, interests } = values;\r\n    if (bio.length < 5) {\r\n      alert(\"Bio is too short.\");\r\n      return false;\r\n    }\r\n    /*else if (interests.length < 3) {\r\n            alert(\"Select at least three interests\",);\r\n            return false;   \r\n        }*/\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      console.log(`${profileRoute}/edit`);\r\n      const { bio /*, interests*/ } = values;\r\n      await axios\r\n        .post(`${profileRoute}/edit`, {\r\n          userId: user._id,\r\n          bio,\r\n          avatarImage: \"\",\r\n          //interests,\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          alert(\"Profile created\");\r\n          //navigate(\"/contacts\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      <section id=\"more-info\">\r\n        <h1>Snart ferdig. Fortell oss litt om deg selv</h1>\r\n        <img class=\"profile-icon\" src=\"profile.svg\" alt=\"profile-icon\" />\r\n        <form class=\"box\" id=\"infoForm\" onSubmit={(e) => handleSubmit(e)}>\r\n          <label class=\"text\">Om Meg</label>\r\n          <textarea name=\"bio\" onChange={(e) => handleChange(e)}></textarea>\r\n          <h2>Intresser</h2>\r\n          <div class=\"btns-odd\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Mat\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Knust\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Litratur\r\n            </button>\r\n          </div>\r\n          <div class=\"btns-even\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Idrett\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Dyr\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Språk\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Musikk\r\n            </button>\r\n          </div>\r\n          <div class=\"showMore\">\r\n            <a href=\"\">\r\n              <IoIosAdd />\r\n            </a>\r\n            <button>Vis flere</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <div class=\"btns\">\r\n        <button>Tilbake</button>\r\n        <a href=\"\">\r\n          <button type=\"submit\" form=\"infoForm\">\r\n            Gå Videre\r\n          </button>\r\n        </a>\r\n      </div>\r\n\r\n      <footer>\r\n        <p>Laget av Rami, Narges, Aina Og Fatima</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Profile.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\Welcome.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\about.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\messages.jsx",["177","178","179"],[],"import { Flex } from \"../components/Flex\";\r\nimport { TopNav } from \"../components/top-nav\";\r\nimport profile from \"../assets/img/profile.svg\";\r\nimport face from \"../assets/img/face.png\";\r\nimport { Contact } from \"../components/contact\";\r\n\r\nexport const Messages = () => {\r\n    return (\r\n        <>\r\n            <TopNav />\r\n            <Flex content=\"space-between\">\r\n                <div\r\n                    className=\"border-end p-3 \"\r\n                    style={{ width: 350 }}\r\n                    id=\"left-side\"\r\n                >\r\n                    <input\r\n                        type=\"search\"\r\n                        class=\"form-control rounded\"\r\n                        placeholder=\"Search\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"search-addon\"\r\n                    />\r\n                    <Contact />\r\n                    <Contact />\r\n                    <Contact />\r\n                    <Contact />\r\n                    <Contact />\r\n                </div>\r\n                <div className=\"flex-grow-1\">\r\n                    <Flex\r\n                        align=\"center\"\r\n                        content=\"center\"\r\n                        className=\"border-bottom p-3\"\r\n                    >\r\n                        <Contact />\r\n                    </Flex>\r\n                    <Flex\r\n                        vertical\r\n                        content=\"space-between\"\r\n                        style={{ height: 500 }}\r\n                    >\r\n                        <div className=\"p-3\">chats</div>\r\n\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"message-input m-2 p-3\"\r\n                            placeholder=\"message...\"\r\n                        />\r\n                    </Flex>\r\n                </div>\r\n                <div\r\n                    className=\"border-start p-3 text-center\"\r\n                    style={{ width: 350 }}\r\n                >\r\n                    <img src={face} />\r\n                    <Flex content=\"center\" className=\"w-100\">\r\n                        <Flex align=\"center\" vertical className=\"mt-4\">\r\n                            <img\r\n                                src={profile}\r\n                                alt=\"profil-icon\"\r\n                                style={{ width: 35, height: 35 }}\r\n                            />\r\n                            <a href=\"\">profile</a>\r\n                        </Flex>\r\n                        <Flex align=\"center\" vertical className=\"mt-4\">\r\n                            <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                width=\"35\"\r\n                                height=\"35\"\r\n                                fill=\"currentColor\"\r\n                                class=\"bi bi-search\"\r\n                                viewBox=\"0 0 16 16\"\r\n                            >\r\n                                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"></path>\r\n                            </svg>\r\n                            <a href=\"\">Søk i chat</a>\r\n                        </Flex>\r\n                    </Flex>\r\n                </div>\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\protected.jsx",["180"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\config.js",["181"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\APIRoutes.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\contact-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\Flex.tsx",[],[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\MainNav.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\top-nav.jsx",["182","183","184"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\contact.jsx",["185","186"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\nav.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\interesser.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\login.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\Register.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\logo.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\interests.jsx",["187","188"],[],"import { Link } from \"react-router-dom\";\r\nimport { Flex } from \"../components/Flex\";\r\nimport { Logo } from \"../components/logo\";\r\nimport profile from \"../assets/img/profile.svg\";\r\nimport pluss from \"../assets/img/pluss.svg\";\r\nexport const Interests = () => {\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"container\" style={{ zIndex: 9999 }}>\r\n                    <Flex content=\"space-between\" align=\"center\">\r\n                        <Logo />\r\n                        <Flex className=\"m-0\" gap={3}>\r\n                            <li className=\"push\">\r\n                                <Link to=\"/logout\" className=\"text-light\">\r\n                                    Log ut\r\n                                </Link>\r\n                            </li>\r\n                        </Flex>\r\n                    </Flex>\r\n                </div>\r\n            </nav>\r\n            <section id=\"first\">\r\n                <h1 className=\"text-center\">\r\n                    Snart ferdig. Fortell oss litt om deg selv\r\n                </h1>\r\n                <img src={profile} className=\"profile-icon\" />\r\n                <div className=\"box\">\r\n                    <label className=\"text\">Om Meg</label>\r\n                    <textarea></textarea>\r\n                    <h2>Intresser</h2>\r\n                    <div className=\"btns-odd\">\r\n                        <button className=\"intress-btn\">Mat</button>\r\n                        <button className=\"intress-btn\">Knust</button>\r\n                        <button className=\"intress-btn\">Litratur</button>\r\n                    </div>\r\n                    <div className=\"btns-even\">\r\n                        <button className=\"intress-btn\">Idrett</button>\r\n                        <button className=\"intress-btn\">Dyr</button>\r\n                        <button className=\"intress-btn\">Språk</button>\r\n                        <button className=\"intress-btn\">Musikk</button>\r\n                    </div>\r\n                    <div className=\"showMore\">\r\n                        <a href=\"\">\r\n                            <img src={pluss} alt=\"pluss-icon\" />\r\n                        </a>\r\n                        <button>Vis flere</button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <Flex className=\"btns\" style={{ backgroundColor: \"transparent\" }}>\r\n                <button>Tilbake</button>\r\n                <button>Gå Videre</button>\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\api\\profile-api.js",[],[],{"ruleId":"189","severity":1,"message":"190","line":5,"column":8,"nodeType":"191","messageId":"192","endLine":5,"endColumn":12},{"ruleId":"193","severity":1,"message":"194","line":88,"column":8,"nodeType":"195","endLine":88,"endColumn":22,"suggestions":"196"},{"ruleId":"189","severity":1,"message":"197","line":12,"column":6,"nodeType":"191","messageId":"192","endLine":12,"endColumn":10},{"ruleId":"189","severity":1,"message":"198","line":93,"column":7,"nodeType":"191","messageId":"192","endLine":93,"endColumn":17},{"ruleId":"199","severity":1,"message":"200","line":98,"column":21,"nodeType":"201","endLine":98,"endColumn":67},{"ruleId":"199","severity":1,"message":"200","line":101,"column":17,"nodeType":"201","endLine":101,"endColumn":54},{"ruleId":"199","severity":1,"message":"200","line":102,"column":17,"nodeType":"201","endLine":102,"endColumn":64},{"ruleId":"189","severity":1,"message":"202","line":11,"column":6,"nodeType":"191","messageId":"192","endLine":11,"endColumn":14},{"ruleId":"189","severity":1,"message":"203","line":35,"column":18,"nodeType":"191","messageId":"192","endLine":35,"endColumn":27},{"ruleId":"204","severity":1,"message":"205","line":106,"column":13,"nodeType":"201","endLine":106,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":115,"column":9,"nodeType":"201","endLine":115,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":56,"column":21,"nodeType":"201","endLine":56,"endColumn":39},{"ruleId":"204","severity":1,"message":"205","line":64,"column":29,"nodeType":"201","endLine":64,"endColumn":40},{"ruleId":"204","severity":1,"message":"205","line":77,"column":29,"nodeType":"201","endLine":77,"endColumn":40},{"ruleId":"193","severity":1,"message":"206","line":12,"column":8,"nodeType":"195","endLine":12,"endColumn":10,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":1,"column":34,"nodeType":"210","messageId":"211","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"213","line":21,"column":50,"nodeType":"210","messageId":"214","endLine":21,"endColumn":52},{"ruleId":"212","severity":1,"message":"213","line":31,"column":50,"nodeType":"210","messageId":"214","endLine":31,"endColumn":52},{"ruleId":"212","severity":1,"message":"213","line":41,"column":50,"nodeType":"210","messageId":"214","endLine":41,"endColumn":52},{"ruleId":"189","severity":1,"message":"215","line":4,"column":10,"nodeType":"191","messageId":"192","endLine":4,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":23,"column":17,"nodeType":"201","endLine":29,"endColumn":19},{"ruleId":"199","severity":1,"message":"200","line":27,"column":17,"nodeType":"201","endLine":27,"endColumn":63},{"ruleId":"204","severity":1,"message":"205","line":44,"column":25,"nodeType":"201","endLine":44,"endColumn":36},"no-unused-vars","'Chat' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array. Outer scope values like 'api' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["216"],"'self' is assigned a value but never used.","'MyContacts' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userName' is assigned a value but never used.","'interests' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["217"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'contactApi' is defined but never used.",{"desc":"218","fix":"219"},{"desc":"218","fix":"220"},"Update the dependencies array to be: [account]",{"range":"221","text":"222"},{"range":"223","text":"222"},[2964,2978],"[account]",[441,443]]