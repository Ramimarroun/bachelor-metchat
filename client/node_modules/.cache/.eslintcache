[{"D:\\Projects\\bachelor-metchat\\client\\src\\index.js":"1","D:\\Projects\\bachelor-metchat\\client\\src\\App.js":"2","D:\\Projects\\bachelor-metchat\\client\\src\\app\\account-context.js":"3","D:\\Projects\\bachelor-metchat\\client\\src\\api\\account-api.js":"4","D:\\Projects\\bachelor-metchat\\client\\src\\api\\api.js":"5","D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx":"6","D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Users.jsx":"7","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Contacts.jsx":"8","D:\\Projects\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx":"9","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Profile.jsx":"10","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Welcome.jsx":"11","D:\\Projects\\bachelor-metchat\\client\\src\\main\\about.jsx":"12","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\protected.jsx":"13","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx":"14","D:\\Projects\\bachelor-metchat\\client\\src\\api\\config.js":"15","D:\\Projects\\bachelor-metchat\\client\\src\\api\\contact-api.js":"16","D:\\Projects\\bachelor-metchat\\client\\src\\components\\Flex.tsx":"17","D:\\Projects\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx":"18","D:\\Projects\\bachelor-metchat\\client\\src\\components\\MainNav.jsx":"19","D:\\Projects\\bachelor-metchat\\client\\src\\components\\top-nav.jsx":"20","D:\\Projects\\bachelor-metchat\\client\\src\\components\\contact.jsx":"21","D:\\Projects\\bachelor-metchat\\client\\src\\components\\nav.jsx":"22","D:\\Projects\\bachelor-metchat\\client\\src\\components\\interesser.jsx":"23","D:\\Projects\\bachelor-metchat\\client\\src\\components\\login.jsx":"24","D:\\Projects\\bachelor-metchat\\client\\src\\components\\Register.jsx":"25","D:\\Projects\\bachelor-metchat\\client\\src\\components\\logo.js":"26","D:\\Projects\\bachelor-metchat\\client\\src\\main\\interests.jsx":"27","D:\\Projects\\bachelor-metchat\\client\\src\\api\\profile-api.js":"28","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\img\\avatars\\index.js":"29","D:\\Projects\\bachelor-metchat\\client\\src\\components\\loading.jsx":"30","D:\\Projects\\bachelor-metchat\\client\\src\\api\\interest-api.js":"31","D:\\Projects\\bachelor-metchat\\client\\src\\api\\user-interest-api.js":"32","D:\\Projects\\bachelor-metchat\\client\\src\\components\\use-query.jsx":"33","D:\\Projects\\bachelor-metchat\\client\\src\\api\\message-api.js":"34","D:\\Projects\\bachelor-metchat\\client\\src\\APIRoutes.js":"35","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Chat.jsx":"36","D:\\Projects\\bachelor-metchat\\client\\src\\main\\chat\\WebSocketClient.js":"37","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\not-found.jsx":"38","D:\\Projects\\bachelor-metchat\\client\\src\\main\\chats.jsx":"39","D:\\Projects\\bachelor-metchat\\client\\src\\api\\conversation-api.js":"40","D:\\Projects\\bachelor-metchat\\client\\src\\components\\conversations.jsx":"41","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Edit.jsx":"42","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Profile.jsx":"43","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Delete.jsx":"44","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\ArrowBack.tsx":"45","D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\AddComment.tsx":"46"},{"size":384,"mtime":1683405998737,"results":"47","hashOfConfig":"48"},{"size":2574,"mtime":1683898943359,"results":"49","hashOfConfig":"48"},{"size":3972,"mtime":1683655545923,"results":"50","hashOfConfig":"48"},{"size":737,"mtime":1683275079565,"results":"51","hashOfConfig":"48"},{"size":425,"mtime":1683055332091,"results":"52","hashOfConfig":"48"},{"size":15646,"mtime":1683898876235,"results":"53","hashOfConfig":"48"},{"size":3913,"mtime":1683898900086,"results":"54","hashOfConfig":"48"},{"size":7534,"mtime":1683822246671,"results":"55","hashOfConfig":"48"},{"size":3653,"mtime":1682623431723,"results":"56","hashOfConfig":"48"},{"size":7851,"mtime":1683746503624,"results":"57","hashOfConfig":"48"},{"size":3431,"mtime":1683050202869,"results":"58","hashOfConfig":"48"},{"size":588,"mtime":1681568238990,"results":"59","hashOfConfig":"48"},{"size":3133,"mtime":1683314485727,"results":"60","hashOfConfig":"48"},{"size":491,"mtime":1683262002916,"results":"61","hashOfConfig":"48"},{"size":447,"mtime":1683823044381,"results":"62","hashOfConfig":"48"},{"size":492,"mtime":1683146230534,"results":"63","hashOfConfig":"48"},{"size":872,"mtime":1678912573140,"results":"64","hashOfConfig":"48"},{"size":1870,"mtime":1682623431710,"results":"65","hashOfConfig":"48"},{"size":2076,"mtime":1682623431712,"results":"66","hashOfConfig":"48"},{"size":1535,"mtime":1683146336749,"results":"67","hashOfConfig":"48"},{"size":6956,"mtime":1683889309538,"results":"68","hashOfConfig":"48"},{"size":869,"mtime":1683262864086,"results":"69","hashOfConfig":"48"},{"size":428,"mtime":1683296691378,"results":"70","hashOfConfig":"48"},{"size":4188,"mtime":1683881654523,"results":"71","hashOfConfig":"48"},{"size":7220,"mtime":1683746503609,"results":"72","hashOfConfig":"48"},{"size":224,"mtime":1682882405574,"results":"73","hashOfConfig":"48"},{"size":6631,"mtime":1683746825282,"results":"74","hashOfConfig":"48"},{"size":396,"mtime":1683306724483,"results":"75","hashOfConfig":"48"},{"size":839,"mtime":1683272639129,"results":"76","hashOfConfig":"48"},{"size":286,"mtime":1683746503613,"results":"77","hashOfConfig":"48"},{"size":180,"mtime":1683278405053,"results":"78","hashOfConfig":"48"},{"size":303,"mtime":1683284387918,"results":"79","hashOfConfig":"48"},{"size":229,"mtime":1671009617218,"results":"80","hashOfConfig":"48"},{"size":309,"mtime":1683839554448,"results":"81","hashOfConfig":"48"},{"size":473,"mtime":1682948881192,"results":"82","hashOfConfig":"48"},{"size":9947,"mtime":1683742554368,"results":"83","hashOfConfig":"48"},{"size":518,"mtime":1683844827314,"results":"84","hashOfConfig":"48"},{"size":548,"mtime":1683654165784,"results":"85","hashOfConfig":"48"},{"size":24311,"mtime":1683901032723,"results":"86","hashOfConfig":"48"},{"size":394,"mtime":1683891511096,"results":"87","hashOfConfig":"48"},{"size":798,"mtime":1683878984223,"results":"88","hashOfConfig":"48"},{"size":679,"mtime":1683846069056,"results":"89","hashOfConfig":"48"},{"size":782,"mtime":1683846189043,"results":"90","hashOfConfig":"48"},{"size":551,"mtime":1683846245405,"results":"91","hashOfConfig":"48"},{"size":444,"mtime":1683890376292,"results":"92","hashOfConfig":"48"},{"size":667,"mtime":1683890367690,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1eytzui",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\bachelor-metchat\\client\\src\\index.js",[],[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\App.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\app\\account-context.js",["244"],[],"import React, { useState, createContext, useEffect, useContext } from \"react\";\r\nimport { accountApi } from \"../api/account-api\";\r\nimport { api } from \"../api/api\";\r\n\r\nexport const accountStatuses = {\r\n    Connecting: \"connecting\",\r\n    ConnectionFailed: \"connection-failed\",\r\n    Connected: \"connected\",\r\n    LoggedIn: \"logged-in\",\r\n    LoggedOut: \"logged-out\",\r\n    Forbidden: \"forbidden\",\r\n};\r\n\r\nexport const AccountContext = createContext();\r\n\r\nexport const useAccount = () => useContext(AccountContext);\r\n\r\nexport const AccountProvider = (props) => {\r\n    const [data, setData] = useState({\r\n        status: \"\",\r\n        displayName: \"\",\r\n        userId: \"\",\r\n    });\r\n\r\n    function logout(sync) {\r\n        if (!api.token) return;\r\n        if (sync) {\r\n            accountApi.logout();\r\n            api.token = null;\r\n        }\r\n        api.token = null;\r\n        account.setStatus(accountStatuses.LoggedOut);\r\n    }\r\n\r\n    const account = {\r\n        getStatus: () => data.status,\r\n\r\n        userName: data.email,\r\n        displayName: data.displayName,\r\n        userId: data.userId,\r\n\r\n        isConnecting: () => account.getStatus() === accountStatuses.Connecting,\r\n        isConnectionFailed: () =>\r\n            account.getStatus() === accountStatuses.ConnectionFailed,\r\n        isConnected: () =>\r\n            account.getStatus() === accountStatuses.Connected ||\r\n            account.getStatus() === accountStatuses.LoggedIn,\r\n        isLoggedIn: () => account.getStatus() === accountStatuses.LoggedIn,\r\n        isLoggedOut: () => account.getStatus() === accountStatuses.LoggedOut,\r\n\r\n        setAsLoggedOut: () => account.setStatus(accountStatuses.LoggedOut),\r\n        setAsForbidden: () => account.setStatus(accountStatuses.Forbidden),\r\n\r\n        setStatus: (value) => setData({ ...data, status: value }),\r\n\r\n        init: () => {\r\n            account.setStatus(accountStatuses.Connecting);\r\n            return accountApi\r\n                .userInfo()\r\n                .then((result) => {\r\n                    api.token = result.data.token;\r\n                    api.expiry = result.data.expiry;\r\n                    var x = {\r\n                        status: accountStatuses.Connected,\r\n                        displayName: result.data.displayName,\r\n                        userName: result.data.email,\r\n                        userId: result.data.userId,\r\n                    };\r\n                    setData(x);\r\n                })\r\n                .catch((ex) => {\r\n                    console.log(\"ex\", ex);\r\n                    if (ex.code === \"ERR_NETWORK\")\r\n                        account.setStatus(accountStatuses.ConnectionFailed);\r\n\r\n                    if (ex.response.status === 401)\r\n                        account.setStatus(accountStatuses.LoggedOut);\r\n                    else account.setStatus(accountStatuses.ConnectionFailed);\r\n\r\n                    throw ex;\r\n                });\r\n        },\r\n\r\n        login: (userName, password) =>\r\n            new Promise((resolve, reject) => {\r\n                accountApi\r\n                    .login(userName, password)\r\n                    .then((result) => {\r\n                        api.token = result.data.token;\r\n                        api.expiry = result.data.expiry;\r\n                        setData({\r\n                            status: accountStatuses.Connected,\r\n                            displayName: result.data.displayName,\r\n                            userName: result.data.email,\r\n                        });\r\n                        resolve(result);\r\n                    })\r\n                    .catch(reject);\r\n            }),\r\n        logout: () => logout(true),\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (account.getStatus() === null) return;\r\n        // api.onUnauthorized(() => account.setAsLoggedOut());\r\n    }, [api, account]);\r\n\r\n    return (\r\n        <AccountContext.Provider value={account}>\r\n            {props.children}\r\n        </AccountContext.Provider>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\api\\account-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Conversations.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\admin\\Users.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\Contacts.jsx",["245"],[],"import React, { useRef } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { contactApi } from \"../api/contact-api\";\r\nimport mail from \"../assets/img/mail.jpg\";\r\nimport pluss from \"../assets/img/pluss.svg\";\r\nimport profile from \"../assets/img/profile.svg\";\r\nimport { Contact } from \"../components/contact\";\r\nimport Nav from \"../components/MainNav\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"../components/loading\";\r\n\r\nexport const Contacts = () => {\r\n    const [model, setModel] = useState();\r\n    const allContactsRef = useRef();\r\n    const myContactsRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (model) return;\r\n\r\n        contactApi\r\n            .init()\r\n            .then((result) => {\r\n                setModel({\r\n                    myContacts: result.data.myContacts,\r\n                    allContacts: result.data.allContacts,\r\n                });\r\n\r\n                allContactsRef.current = result.data.allContacts;\r\n                myContactsRef.current = result.data.myContacts;\r\n            })\r\n            .catch(() => alert(\"error\"));\r\n    }, [model]);\r\n\r\n    const onAddContactHandler = (id) => {\r\n        contactApi\r\n            .addContact({ contactId: id })\r\n            .then((result) => {\r\n                var contact = model.allContacts.find((x) => x._id === id);\r\n\r\n                setModel({\r\n                    ...model,\r\n                    myContacts: [...model.myContacts, contact],\r\n                });\r\n            })\r\n            .catch(() => alert(\"error\"));\r\n    };\r\n\r\n    const onDeleteHandler = (id) => {\r\n        contactApi\r\n            .remove({ contactId: id })\r\n            .then((result) => {\r\n                setModel({\r\n                    ...model,\r\n                    myContacts: model.myContacts.filter((x) => x._id !== id),\r\n                });\r\n            })\r\n            .catch(() => alert(\"error\"));\r\n    };\r\n    if (!model) return <Loading />;\r\n    return (\r\n        <>\r\n            <Nav />\r\n\r\n            <div\r\n                className=\"container-fluid position-relative\"\r\n                style={{ top: 15 }}\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-4 \">\r\n                        <h5>Mine kontakter</h5>\r\n\r\n                        <input\r\n                            type=\"search\"\r\n                            className=\"form-control rounded mb-4\"\r\n                            placeholder=\"Søk\"\r\n                            onChange={(e) =>\r\n                                setModel({\r\n                                    ...model,\r\n                                    myContacts: myContactsRef.current.filter(\r\n                                        (x) =>\r\n                                            x.firstName\r\n                                                .toLowerCase()\r\n                                                .includes(\r\n                                                    e.target.value.toLowerCase()\r\n                                                ) ||\r\n                                            x.lastName\r\n                                                .toLowerCase()\r\n                                                .includes(\r\n                                                    e.target.value.toLowerCase()\r\n                                                )\r\n                                    ),\r\n                                })\r\n                            }\r\n                        />\r\n\r\n                        {model?.myContacts?.map((x) => (\r\n                            <React.Fragment key={x._id}>\r\n                                <Contact\r\n                                    contact={{\r\n                                        ...x,\r\n                                        name: x.firstName + \" \" + x.lastName,\r\n                                    }}\r\n                                    pluss={pluss}\r\n                                    mail={mail}\r\n                                    profile={profile}\r\n                                    onAdd={onAddContactHandler}\r\n                                    onDelete={onDeleteHandler}\r\n                                    inContact\r\n                                    isInMyContacts\r\n                                    visibleIcons\r\n                                    allowDelete\r\n                                />\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-8\">\r\n                        <h5>Finn kontakter</h5>\r\n\r\n                        <input\r\n                            type=\"search\"\r\n                            className=\"form-control rounded mb-4\"\r\n                            placeholder=\"Søk\"\r\n                            onChange={(e) =>\r\n                                setModel({\r\n                                    ...model,\r\n                                    allContacts: allContactsRef.current.filter(\r\n                                        (x) =>\r\n                                            x.firstName\r\n                                                .toLowerCase()\r\n                                                .includes(\r\n                                                    e.target.value.toLowerCase()\r\n                                                ) ||\r\n                                            x.lastName\r\n                                                .toLowerCase()\r\n                                                .includes(\r\n                                                    e.target.value.toLowerCase()\r\n                                                )\r\n                                    ),\r\n                                })\r\n                            }\r\n                            style={{ maxWidth: 500 }}\r\n                        />\r\n\r\n                        <div style={{ maxWidth: 500 }}>\r\n                            {model?.allContacts?.map((x) => {\r\n                                const isInMyContacts = model.myContacts.find(\r\n                                    (c) => c._id === x._id\r\n                                );\r\n                                return (\r\n                                    <React.Fragment key={x._id}>\r\n                                        <Contact\r\n                                            contact={{\r\n                                                ...x,\r\n                                                name:\r\n                                                    x.firstName +\r\n                                                    \" \" +\r\n                                                    x.lastName,\r\n                                            }}\r\n                                            pluss={pluss}\r\n                                            isInMyContacts={isInMyContacts}\r\n                                            mail={mail}\r\n                                            profile={profile}\r\n                                            onAdd={onAddContactHandler}\r\n                                            visibleIcons\r\n                                            inContact\r\n                                            displayIntrests\r\n                                        />\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\main\\MoreInfo.jsx",["246","247","248","249"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { /*Link,*/ useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { IoIosAdd } from \"react-icons/io\";\r\nimport { profileRoute } from \"../APIRoutes\";\r\nimport MainNav from \"../components/MainNav\";\r\n\r\nexport default function MoreInfo() {\r\n  const navigate = useNavigate(),\r\n    [user, setUser] = useState(undefined),\r\n    [userName, setUserName] = useState(undefined);\r\n\r\n  const [values, setValues] = useState({\r\n    bio: \"\",\r\n    interests: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\r\n      else {\r\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\r\n        setUser(data);\r\n        setUserName(data.firstName);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    const { bio, interests } = values;\r\n    if (bio.length < 5) {\r\n      alert(\"Bio is too short.\");\r\n      return false;\r\n    }\r\n    /*else if (interests.length < 3) {\r\n            alert(\"Select at least three interests\",);\r\n            return false;   \r\n        }*/\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      console.log(`${profileRoute}/edit`);\r\n      const { bio /*, interests*/ } = values;\r\n      await axios\r\n        .post(`${profileRoute}/edit`, {\r\n          userId: user._id,\r\n          bio,\r\n          avatarImage: \"\",\r\n          //interests,\r\n        })\r\n        .then((data) => {\r\n          console.log(data);\r\n          alert(\"Profile created\");\r\n          //navigate(\"/contacts\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainNav />\r\n      <section id=\"more-info\">\r\n        <h1>Snart ferdig. Fortell oss litt om deg selv</h1>\r\n        <img class=\"profile-icon\" src=\"profile.svg\" alt=\"profile-icon\" />\r\n        <form class=\"box\" id=\"infoForm\" onSubmit={(e) => handleSubmit(e)}>\r\n          <label class=\"text\">Om Meg</label>\r\n          <textarea name=\"bio\" onChange={(e) => handleChange(e)}></textarea>\r\n          <h2>Intresser</h2>\r\n          <div class=\"btns-odd\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Mat\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Knust\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Litratur\r\n            </button>\r\n          </div>\r\n          <div class=\"btns-even\">\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Idrett\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Dyr\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Språk\r\n            </button>\r\n            <button type=\"button\" class=\"intress-btn\">\r\n              Musikk\r\n            </button>\r\n          </div>\r\n          <div class=\"showMore\">\r\n            <a href=\"\">\r\n              <IoIosAdd />\r\n            </a>\r\n            <button>Vis flere</button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n      <div class=\"btns\">\r\n        <button>Tilbake</button>\r\n        <a href=\"\">\r\n          <button type=\"submit\" form=\"infoForm\">\r\n            Gå Videre\r\n          </button>\r\n        </a>\r\n      </div>\r\n\r\n      <footer>\r\n        <p>Laget av Rami, Narges, Aina Og Fatima</p>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Profile.jsx",["250"],[],"import classNames from \"classnames\";\r\nimport * as yup from \"yup\";\r\n\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { accountApi } from \"../api/account-api\";\r\nimport { profileApi } from \"../api/profile-api\";\r\nimport { userInterestApi } from \"../api/user-interest-api\";\r\nimport cover from \"../assets/img/cover.png\";\r\nimport { Flex } from \"../components/Flex\";\r\nimport Nav from \"../components/MainNav\";\r\nimport { Contact } from \"../components/contact\";\r\nimport { Interesser } from \"../components/interesser\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { useQuery } from \"../components/use-query\";\r\n\r\nexport const Profile = () => {\r\n    const q = useQuery();\r\n    const contactId = q.get(\"contactId\") ?? null;\r\n\r\n    const [model, setModel] = useState({ readOnly: true, init: false });\r\n    const passwordFormRef = useRef();\r\n\r\n    useEffect(() => {\r\n        profileApi\r\n            .profile({ contactId })\r\n            .then((result) =>\r\n                setModel({\r\n                    ...model,\r\n                    ...result.data.user,\r\n                    init: true,\r\n                })\r\n            )\r\n            .catch(() => alert(\"error in init profile\"));\r\n    }, [contactId]);\r\n\r\n    const handelEdit = () => {\r\n        if (model.readOnly) setModel({ ...model, readOnly: false });\r\n        else {\r\n            new Promise((resolve, reject) => {\r\n                profileApi.changeBio({ bio: model.bio });\r\n\r\n                if (passwordFormRef.current.values.password)\r\n                    accountApi.changePassword({\r\n                        password: passwordFormRef.current.values.password,\r\n                    });\r\n\r\n                setModel({ ...model, readOnly: true });\r\n                resolve();\r\n            })\r\n                .then((x) => {\r\n                    alert(\"Profilen ble endret!\");\r\n                })\r\n                .catch(() => alert(\"error in update profile\"));\r\n        }\r\n    };\r\n\r\n    const onChangeAvatarHandler = (avatar) => {\r\n        profileApi\r\n            .changeAvatar({ avatar: avatar })\r\n            .then(() => {\r\n                setModel({\r\n                    ...model,\r\n                    avatar,\r\n                });\r\n            })\r\n            .catch(() => alert(\"error in init profile\"));\r\n    };\r\n\r\n    const addIntrest = (x) =>\r\n        userInterestApi\r\n            .create({\r\n                interestId: x._id,\r\n            })\r\n            .then((result) => {\r\n                setModel({\r\n                    ...model,\r\n                    userInterests: [\r\n                        ...model.userInterests,\r\n                        result.data.userInterest,\r\n                    ],\r\n                });\r\n            });\r\n\r\n    const deleteIntrest = (x) => {\r\n        userInterestApi\r\n            .delete({\r\n                interestId: x._id,\r\n            })\r\n            .then(() => {\r\n                var userInterests = model.userInterests.filter(\r\n                    (c) => c.interestId !== x._id\r\n                );\r\n                setModel({\r\n                    ...model,\r\n                    userInterests,\r\n                });\r\n            });\r\n    };\r\n\r\n    if (!model.init) return <Loading />;\r\n\r\n    return (\r\n        <>\r\n            <Nav />\r\n\r\n            <div\r\n                className=\" w-100\"\r\n                style={{\r\n                    height: 300,\r\n                    backgroundImage: `url(${cover})`,\r\n                    backgroundSize: \"cover\",\r\n                }}\r\n            ></div>\r\n            <div className=\"container-fluid\">\r\n                <Flex content=\"space-between\">\r\n                    <div style={{ marginTop: -50 }}>\r\n                        <Contact\r\n                            width={100}\r\n                            height={100}\r\n                            textStyle={{\r\n                                top: 30,\r\n                                position: \"relative\",\r\n                                fontSize: 35,\r\n                                fontWeight: \"bold\",\r\n                            }}\r\n                            contact={{\r\n                                name: model.firstName + \" \" + model.lastName,\r\n                                avatar: model.avatar,\r\n                                email: model.email,\r\n                            }}\r\n                            allowChangeAvatar\r\n                            onChangeAvatarHandler={onChangeAvatarHandler}\r\n                            readOnly={model.readOnly}\r\n                        />\r\n                    </div>\r\n                    {model.allowEdit && (\r\n                        <button\r\n                            className=\"profile-edit-button btn\"\r\n                            onClick={handelEdit}\r\n                        >\r\n                            {model.readOnly ? (\r\n                                <span>Rediger</span>\r\n                            ) : (\r\n                                <span>save</span>\r\n                            )}\r\n                        </button>\r\n                    )}\r\n                </Flex>\r\n\r\n                <div className=\"ms-5 mt-5 mb-5\">\r\n                    <h6 className=\"border-bottom pb-2\">Bio</h6>\r\n                    <textarea\r\n                        style={{ width: 500 }}\r\n                        readOnly={model.readOnly}\r\n                        className={classNames({ \"bg-light\": model.readOnly })}\r\n                        value={model.bio}\r\n                        onChange={(e) =>\r\n                            setModel({ ...model, bio: e.target.value })\r\n                        }\r\n                    ></textarea>\r\n\r\n                    {model.interests?.length && (\r\n                        <>\r\n                            <h6 className=\"mt-5 border-bottom pb-2\">\r\n                                Interesser\r\n                            </h6>\r\n                            <Flex\r\n                                className=\"flex-wrap\"\r\n                                style={{ maxWidth: 1000 }}\r\n                            >\r\n                                {model.interests.map((x) => {\r\n                                    var userInt = model.userInterests.find(\r\n                                        (i) => i.interestId === x._id\r\n                                    );\r\n                                    if (!model.allowEdit && !userInt) return \"\";\r\n                                    return (\r\n                                        <Interesser\r\n                                            key={x._id}\r\n                                            interess={x}\r\n                                            onClick={() => {\r\n                                                if (model.readOnly) return;\r\n\r\n                                                if (!userInt) addIntrest(x);\r\n                                                else deleteIntrest(x);\r\n                                            }}\r\n                                            isActive={userInt}\r\n                                            className=\"mb-2\"\r\n                                        />\r\n                                    );\r\n                                })}\r\n                            </Flex>\r\n                        </>\r\n                    )}\r\n\r\n                    {model.allowEdit && (\r\n                        <>\r\n                            {\" \"}\r\n                            <h6 className=\"mt-5 border-bottom pb-2\">\r\n                                Change password\r\n                            </h6>\r\n                            <Formik\r\n                                initialValues={{\r\n                                    password: \"\",\r\n                                    confirmPassword: \"\",\r\n                                }}\r\n                                validationSchema={yup.object({\r\n                                    password: yup\r\n                                        .string()\r\n                                        .required(\"Required\")\r\n                                        .min(\r\n                                            6,\r\n                                            \"password-minimum-length-is-6-characters\"\r\n                                        ),\r\n                                    confirmPassword: yup\r\n                                        .string()\r\n                                        .required(\"Required\")\r\n                                        .oneOf(\r\n                                            [yup.ref(\"password\"), null],\r\n                                            \"passwords-must-match\"\r\n                                        ),\r\n                                })}\r\n                                innerRef={passwordFormRef}\r\n                            >\r\n                                {({ errors, touched }) => (\r\n                                    <Form id=\"form_reg\">\r\n                                        <div className=\"form-row mt-0 pt-0\">\r\n                                            <label>Passord</label>\r\n                                            <Field name=\"password\">\r\n                                                {({ field }) => (\r\n                                                    <input\r\n                                                        type=\"password\"\r\n                                                        id=\"password_reg\"\r\n                                                        {...field}\r\n                                                        readOnly={\r\n                                                            model.readOnly\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            </Field>\r\n                                            {errors.password &&\r\n                                            touched.password ? (\r\n                                                <div className=\"text-warning\">\r\n                                                    {errors.password}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        <div className=\"form-row mt-0\">\r\n                                            <label>Gjente Passord</label>\r\n                                            <Field name=\"confirmPassword\">\r\n                                                {({ field }) => (\r\n                                                    <input\r\n                                                        type=\"password\"\r\n                                                        id=\"password_reg\"\r\n                                                        {...field}\r\n                                                        readOnly={\r\n                                                            model.readOnly\r\n                                                        }\r\n                                                    />\r\n                                                )}\r\n                                            </Field>\r\n                                            {errors.confirmPassword &&\r\n                                            touched.confirmPassword ? (\r\n                                                <div className=\"text-warning\">\r\n                                                    {errors.confirmPassword}\r\n                                                </div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    </Form>\r\n                                )}\r\n                            </Formik>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\main\\Welcome.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\about.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\shared\\protected.jsx",["251"],[],"import { useEffect } from \"react\";\r\nimport { Link, Outlet, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { accountStatuses, useAccount } from \"../app/account-context\";\r\nimport logo from \"../assets/img/Logo.svg\";\r\n\r\nexport function Protected() {\r\n    const account = useAccount();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    function reconnect() {\r\n        account.init();\r\n    }\r\n    useEffect(() => {\r\n        if (account.getStatus() === \"\") account.init();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {account.getStatus() === accountStatuses.Connecting && (\r\n                <div className=\"h-100 middle text-center\">\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--0s\"></div>\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--1s\"></div>\r\n                    <div className=\"m-e-2 spinner-grow text-info spinner-grow-sm animation-delay--2s\"></div>\r\n                </div>\r\n            )}\r\n\r\n            {account.getStatus() === accountStatuses.ConnectionFailed && (\r\n                <div className=\"h-100 middle\">\r\n                    <div className=\"text-center\">\r\n                        <div className=\"text-danger p-3\">\r\n                            Tjenesten er ikke tilgjengelig\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-link btn-icon text-dark\"\r\n                            onClick={reconnect}\r\n                        >\r\n                            <span className=\"p-s-2\">Prøv på nytt</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {account.isConnected() && <Outlet />}\r\n            {account.getStatus() === accountStatuses.LoggedOut && (\r\n                <div\r\n                    className=\"h-100 middle text-center\"\r\n                    style={{ maxHeight: 601 }}\r\n                >\r\n                    <div>\r\n                        <Link to=\"/\" className=\"logo\">\r\n                            <img src={logo} alt=\"logo\" width={150} />\r\n                        </Link>\r\n                        <div>We cannot authenticate you</div>\r\n                        <dl className=\"pt-2\">\r\n                            <dd className=\"mb-1\">\r\n                                <button\r\n                                    className=\"btn\"\r\n                                    onClick={() =>\r\n                                        navigate(\"/\", {\r\n                                            state: { from: location },\r\n                                            replace: true,\r\n                                        })\r\n                                    }\r\n                                >\r\n                                    Login\r\n                                </button>\r\n                            </dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {account.getStatus() === accountStatuses.Forbidden && <Outlet />}\r\n        </>\r\n    );\r\n}\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\shared\\public-layout.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\config.js",["252","253"],[],"const host = \"http://localhost:\" + \"8088\";\r\nconst chat = \"ws://localhost:\" + \"8000\";\r\nexport const apiConfig = {\r\n    baseUrl: host,\r\n    chatUrl: chat,\r\n    accountUrl: host + \"/authentication\",\r\n    contactUrl: host + \"/contacts\",\r\n    messageUrl: host + \"/messages\",\r\n    conversationUrl: host + \"/conversations\",\r\n    interestsUrl: host + \"/interests\",\r\n    userInterestsUrl: host + \"/user-interests\",\r\n    profileUrl: host + \"/profile\",\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\api\\contact-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\Flex.tsx",[],[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\AdminNav.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\MainNav.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\top-nav.jsx",["254","255","256"],[],"import { Link, useLocation } from \"react-router-dom\";\r\nimport { Flex } from \"./Flex\";\r\nimport { Logo } from \"./logo\";\r\nimport classNames from \"classnames\";\r\nimport { useAccount } from \"../app/account-context\";\r\n\r\nexport const TopNav = () => {\r\n    const account = useAccount();\r\n    const page = useLocation().pathname;\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"container-fluid\" style={{ zIndex: 9999 }}>\r\n                <Flex content=\"space-between\" align=\"center\" className=\"pe-3\">\r\n                    <Logo />\r\n                    <Flex className=\"m-0\" gap={3}>\r\n                        <li className=\"push\">\r\n                            <Link to=\"/kontakter\">Kontakter</Link>\r\n                        </li>\r\n                        <li className=\"push\">\r\n                            <Link to=\"/samtaler\">Meldinger</Link>\r\n                        </li>\r\n                        <li className=\"push\">\r\n                            <Link to=\"/profil\">Profil</Link>\r\n                        </li>\r\n                        <li className=\"push\">\r\n                            <span\r\n                                style={{ fontSize: 20 }}\r\n                                className=\"text-warning\"\r\n                            ></span>\r\n                            <Link to=\"/logout\" className=\"text-light\">\r\n                                Log ut\r\n                            </Link>\r\n                        </li>\r\n                    </Flex>\r\n                </Flex>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n",[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\contact.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\nav.jsx",["257","258","259"],[],"import { Link } from \"react-router-dom\";\r\nimport Logo from \"../assets/img/Logo.svg\";\r\nimport { HiBars3 } from \"react-icons/hi2\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Nav = () => {\r\n  /* Toggle Nav*/\r\n  const [showLinks, setShowLinks] = useState(false);\r\n  const toggleLinks = () => {\r\n    setShowLinks(!showLinks);\r\n  };\r\n  return (\r\n    <nav className=\"nav-center\">\r\n      <div className=\"nav-header\">\r\n        <Link to=\"/\">\r\n          <img src={Logo} />\r\n        </Link>\r\n\r\n        <a className=\"push\" href=\"\">\r\n          Om Oss\r\n        </a>\r\n\r\n        <HiBars3 className=\"nav-toggle\" onClick={toggleLinks} />\r\n      </div>\r\n\r\n      <ul\r\n        className={\r\n          showLinks ? \"links-container show-container\" : \"links-container\"\r\n        }\r\n      >\r\n        <li>\r\n          <a href=\"\">Om Oss</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\components\\interesser.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\login.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\Register.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\logo.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\interests.jsx",["260"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { profileApi } from \"../api/profile-api\";\r\nimport { useAccount } from \"../app/account-context\";\r\nimport pluss from \"../assets/img/pluss.svg\";\r\nimport { Flex } from \"../components/Flex\";\r\nimport { Contact } from \"../components/contact\";\r\nimport { Loading } from \"../components/loading\";\r\nimport { Logo } from \"../components/logo\";\r\nimport { Interesser } from \"../components/interesser\";\r\nimport { userInterestApi } from \"../api/user-interest-api\";\r\n\r\nexport const Interests = () => {\r\n    const account = useAccount();\r\n    const [model, setModel] = useState({ init: false, count: 10 });\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (model.init) return;\r\n\r\n        profileApi\r\n            .profile()\r\n            .then((result) =>\r\n                setModel({ ...model, ...result.data.user, init: true })\r\n            )\r\n            .catch(() => alert(\"error in init profile\"));\r\n    }, []);\r\n\r\n    const onChangeAvatarHandler = (avatar) => {\r\n        profileApi\r\n            .changeAvatar({ avatar: avatar })\r\n            .then(() => {\r\n                setModel({\r\n                    ...model,\r\n                    avatar,\r\n                });\r\n            })\r\n            .catch(() => alert(\"error in init profile\"));\r\n    };\r\n\r\n    const addIntrest = (x) =>\r\n        userInterestApi\r\n            .create({\r\n                interestId: x._id,\r\n            })\r\n            .then((result) => {\r\n                setModel({\r\n                    ...model,\r\n                    userInterests: [\r\n                        ...model.userInterests,\r\n                        result.data.userInterest,\r\n                    ],\r\n                });\r\n            });\r\n\r\n    const deleteIntrest = (x) => {\r\n        userInterestApi\r\n            .delete({\r\n                interestId: x._id,\r\n            })\r\n            .then(() => {\r\n                var userInterests = model.userInterests.filter(\r\n                    (c) => c.interestId !== x._id\r\n                );\r\n                setModel({\r\n                    ...model,\r\n                    userInterests,\r\n                });\r\n            });\r\n    };\r\n\r\n    const onSave = () => {\r\n        profileApi\r\n            .changeBio({ bio: model.bio })\r\n            .then((x) => navigate(\"/kontakter\"));\r\n    };\r\n\r\n    if (!model.init) return <Loading />;\r\n\r\n    return (\r\n        <>\r\n            <nav>\r\n                <div className=\"container\" style={{ zIndex: 9999 }}>\r\n                    <Flex content=\"space-between\" align=\"center\">\r\n                        <Logo />\r\n                        <Flex className=\"m-0\" gap={3}>\r\n                            <li className=\"push\">\r\n                                <Link to=\"/logout\" className=\"text-light\">\r\n                                    Log ut\r\n                                </Link>\r\n                            </li>\r\n                        </Flex>\r\n                    </Flex>\r\n                </div>\r\n            </nav>\r\n\r\n            <section id=\"first\">\r\n                <h1 className=\"text-center\">\r\n                    Snart ferdig. Fortell oss litt om deg selv\r\n                </h1>\r\n\r\n                <Contact\r\n                    width={250}\r\n                    height={250}\r\n                    textStyle={{\r\n                        top: 30,\r\n                        position: \"relative\",\r\n                        fontSize: 35,\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                    contact={{\r\n                        name: account.displayName,\r\n                        avatar: model.avatar,\r\n                        email: model.email,\r\n                    }}\r\n                    allowChangeAvatar\r\n                    onChangeAvatarHandler={onChangeAvatarHandler}\r\n                    displayText={false}\r\n                />\r\n\r\n                <div className=\"box\">\r\n                    <label className=\"text\">Om Meg</label>\r\n                    <textarea\r\n                        style={{ width: 500 }}\r\n                        value={model.bio}\r\n                        onChange={(e) =>\r\n                            setModel({ ...model, bio: e.target.value })\r\n                        }\r\n                    ></textarea>\r\n\r\n                    <h2>Intresser</h2>\r\n                    {model.interests.length && (\r\n                        <Flex className=\"flex-wrap\" content=\"center\">\r\n                            {model.interests.slice(0, model.count).map((x) => {\r\n                                var userInt = model.userInterests.find(\r\n                                    (i) => i.interestId === x._id\r\n                                );\r\n\r\n                                return (\r\n                                    <Interesser\r\n                                        key={x._id}\r\n                                        interess={x}\r\n                                        onClick={() => {\r\n                                            if (!userInt) addIntrest(x);\r\n                                            else deleteIntrest(x);\r\n                                        }}\r\n                                        isActive={userInt}\r\n                                        className=\"mb-2\"\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </Flex>\r\n                    )}\r\n\r\n                    <Flex className=\"my-3 w-100 ps-5\" align=\"center\">\r\n                        <span\r\n                            className=\"p-1 bg-light\"\r\n                            style={{ cursor: \"pointer\" }}\r\n                        >\r\n                            <img\r\n                                src={pluss}\r\n                                width={50}\r\n                                alt=\"pluss-icon\"\r\n                                onClick={() =>\r\n                                    setModel({\r\n                                        ...model,\r\n                                        count: model.count + 10,\r\n                                    })\r\n                                }\r\n                            />\r\n                        </span>\r\n                        <span className=\"ms-3\">Vis flere</span>\r\n                    </Flex>\r\n                </div>\r\n            </section>\r\n\r\n            <Flex className=\"btns\" style={{ backgroundColor: \"transparent\" }}>\r\n                <button onClick={() => navigate(\"/\")}>Tilbake</button>\r\n                <button onClick={onSave}>Gå Videre</button>\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n","D:\\Projects\\bachelor-metchat\\client\\src\\api\\profile-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\img\\avatars\\index.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\loading.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\interest-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\user-interest-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\use-query.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\message-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\APIRoutes.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\Chat.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\chat\\WebSocketClient.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\shared\\not-found.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\main\\chats.jsx",["261"],[],"D:\\Projects\\bachelor-metchat\\client\\src\\api\\conversation-api.js",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\components\\conversations.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Edit.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Profile.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\Delete.jsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\ArrowBack.tsx",[],[],"D:\\Projects\\bachelor-metchat\\client\\src\\assets\\icons\\AddComment.tsx",[],[],{"ruleId":"262","severity":1,"message":"263","line":106,"column":8,"nodeType":"264","endLine":106,"endColumn":22,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":9,"column":10,"nodeType":"268","messageId":"269","endLine":9,"endColumn":14},{"ruleId":"266","severity":1,"message":"270","line":11,"column":6,"nodeType":"268","messageId":"269","endLine":11,"endColumn":14},{"ruleId":"266","severity":1,"message":"271","line":35,"column":18,"nodeType":"268","messageId":"269","endLine":35,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":106,"column":13,"nodeType":"274","endLine":106,"endColumn":24},{"ruleId":"272","severity":1,"message":"273","line":115,"column":9,"nodeType":"274","endLine":115,"endColumn":20},{"ruleId":"262","severity":1,"message":"275","line":35,"column":8,"nodeType":"264","endLine":35,"endColumn":19,"suggestions":"276"},{"ruleId":"262","severity":1,"message":"277","line":16,"column":8,"nodeType":"264","endLine":16,"endColumn":10,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":1,"column":34,"nodeType":"281","messageId":"282","endLine":1,"endColumn":35},{"ruleId":"279","severity":1,"message":"280","line":2,"column":32,"nodeType":"281","messageId":"282","endLine":2,"endColumn":33},{"ruleId":"266","severity":1,"message":"283","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":18},{"ruleId":"266","severity":1,"message":"284","line":8,"column":11,"nodeType":"268","messageId":"269","endLine":8,"endColumn":18},{"ruleId":"266","severity":1,"message":"285","line":9,"column":11,"nodeType":"268","messageId":"269","endLine":9,"endColumn":15},{"ruleId":"286","severity":1,"message":"287","line":16,"column":11,"nodeType":"274","endLine":16,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":19,"column":9,"nodeType":"274","endLine":19,"endColumn":37},{"ruleId":"272","severity":1,"message":"273","line":32,"column":11,"nodeType":"274","endLine":32,"endColumn":22},{"ruleId":"262","severity":1,"message":"275","line":27,"column":8,"nodeType":"264","endLine":27,"endColumn":10,"suggestions":"288"},{"ruleId":"262","severity":1,"message":"289","line":74,"column":8,"nodeType":"264","endLine":74,"endColumn":19,"suggestions":"290"},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'api'. Either exclude it or remove the dependency array. Outer scope values like 'api' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["291"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'userName' is assigned a value but never used.","'interests' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'model'. Either include it or remove the dependency array. You can also do a functional update 'setModel(m => ...)' if you only need 'model' in the 'setModel' call.",["292"],"React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["293"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'classNames' is defined but never used.","'account' is assigned a value but never used.","'page' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["294"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["295"],{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"296","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [account]",{"range":"305","text":"306"},"Update the dependencies array to be: [contactId, model]",{"range":"307","text":"308"},{"range":"309","text":"306"},"Update the dependencies array to be: [model]",{"range":"310","text":"311"},"Update the dependencies array to be: [contactId, init]",{"range":"312","text":"313"},[3809,3823],"[account]",[1247,1258],"[contactId, model]",[518,520],[1022,1024],"[model]",[2596,2607],"[contactId, init]"]