[{"/Users/fatima/Documents/bachelor-metchat/client/src/index.js":"1","/Users/fatima/Documents/bachelor-metchat/client/src/App.js":"2","/Users/fatima/Documents/bachelor-metchat/client/src/main/Chat.jsx":"3","/Users/fatima/Documents/bachelor-metchat/client/src/main/Welcome.jsx":"4","/Users/fatima/Documents/bachelor-metchat/client/src/main/Contacts.jsx":"5","/Users/fatima/Documents/bachelor-metchat/client/src/main/MoreInfo.jsx":"6","/Users/fatima/Documents/bachelor-metchat/client/src/admin/Conversations.jsx":"7","/Users/fatima/Documents/bachelor-metchat/client/src/admin/Users.jsx":"8","/Users/fatima/Documents/bachelor-metchat/client/src/APIRoutes.js":"9","/Users/fatima/Documents/bachelor-metchat/client/src/components/AdminNav.jsx":"10","/Users/fatima/Documents/bachelor-metchat/client/src/components/login.jsx":"11","/Users/fatima/Documents/bachelor-metchat/client/src/components/MainNav.jsx":"12","/Users/fatima/Documents/bachelor-metchat/client/src/components/Register.jsx":"13"},{"size":541,"mtime":1681153708048,"results":"14","hashOfConfig":"15"},{"size":1253,"mtime":1682505496387,"results":"16","hashOfConfig":"15"},{"size":7033,"mtime":1682505496516,"results":"17","hashOfConfig":"15"},{"size":5782,"mtime":1682505496517,"results":"18","hashOfConfig":"15"},{"size":4775,"mtime":1682505496516,"results":"19","hashOfConfig":"15"},{"size":3526,"mtime":1682505496517,"results":"20","hashOfConfig":"15"},{"size":9165,"mtime":1682587320584,"results":"21","hashOfConfig":"15"},{"size":2802,"mtime":1682505496388,"results":"22","hashOfConfig":"15"},{"size":460,"mtime":1680710764105,"results":"23","hashOfConfig":"15"},{"size":1801,"mtime":1682505496514,"results":"24","hashOfConfig":"15"},{"size":4377,"mtime":1682505496515,"results":"25","hashOfConfig":"15"},{"size":1999,"mtime":1682505496514,"results":"26","hashOfConfig":"15"},{"size":3894,"mtime":1682505496515,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"590u47",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fatima/Documents/bachelor-metchat/client/src/index.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/App.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/main/Chat.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/main/Welcome.jsx",["68","69"],[],"/Users/fatima/Documents/bachelor-metchat/client/src/main/Contacts.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/main/MoreInfo.jsx",["70","71","72","73"],[],"/Users/fatima/Documents/bachelor-metchat/client/src/admin/Conversations.jsx",["74","75"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CSVLink } from \"react-csv\";\nimport { contactRoute, conversationRoute, messageRoute } from \"../APIRoutes\";\n\nimport AdminNav from \"../components/AdminNav\";\nimport dummyProfile from \"../assets/img/profile.svg\";\n\nexport default function Conversations() {\n  const navigate = useNavigate(),\n    [self, setSelf] = useState({}),\n    [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!localStorage.getItem(\"metchat-user\")) navigate(\"/\");\n      else {\n        const data = await JSON.parse(localStorage.getItem(\"metchat-user\"));\n        setSelf(data);\n      }\n    }\n    fetchData();\n  }, [navigate]);\n\n  // get conversations\n  useEffect(() => {\n    async function getConversations() {\n      await axios\n        .get(`${conversationRoute}/getAllConversations`)\n        .then(async (response) => {\n          const conversations = response.data,\n            count = conversations.length;\n\n          for (let i = 0; i < count; i++) {\n            const date = new Date(conversations[i].createdAt),\n              year = date.getFullYear();\n            let month = date.getMonth() + 1,\n              day = date.getDate(),\n              hour = date.getHours(),\n              minute = date.getMinutes();\n\n            if (month < 10) month = \"0\" + month;\n            if (day < 10) day = \"0\" + day;\n            if (hour < 10) hour = \"0\" + hour;\n            if (minute < 10) minute = \"0\" + minute;\n\n            conversations[i].createdAtText = `${day}/${month}/${year} - ${hour}:${minute}`;\n\n            // fetch sender data\n            await axios.get(`${contactRoute}/getUser`, {\n                params: { id: conversations[i].fromId },\n              })\n              .then((response) => {\n                conversations[i][\"fromData\"] = response.data;\n              })\n              .catch((err) => {\n                conversations[i][\"fromData\"] = [];\n                alert(err.response.data);\n              });\n\n            // fetch receiver data  \n            await axios.get(`${contactRoute}/getUser`, {\n                params: { id: conversations[i].toId },\n              })\n              .then((response) => {\n                conversations[i][\"toData\"] = response.data;\n              })\n              .catch((err) => {\n                conversations[i][\"toData\"] = [];\n                alert(err.response.data);\n              });\n\n            // fetch messages\n            axios.get(`${conversationRoute}/messages`, {\n              params: { conversationId: conversations[i]._id },\n            })\n\n            //await axios.get(`${conversationRoute}/conversations/${conversations[i]._id}/messages`)\n            .then((response) => {\n              conversations[i][\"messages\"] = response.data.map(message => message.text).join('\\n');\n            }) \n            .catch((err) => {\n              conversations[i][\"messages\"] = \"\";\n              alert(err.response.data);\n            });\n          }\n          setConversations(conversations);\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(err.response.data);\n        });\n    }\n    getConversations();\n  });\n\n  // csv data\n  const csvData = conversations.map((conversation) => {\n    return {\n      date: conversation.createdAtText.split(\" - \")[0],\n      time: conversation.createdAtText.split(\" - \")[1],\n      sender: conversation.fromData.name,\n      receiver: conversation.toData.name,\n      messages: conversation.messages || \"\",\n    };\n  });\n\n  // csv headers\n  const headers = [\n    { label: \"Date\", key: \"date\"},\n    { label: \"Time\", key: \"time\"},\n    { label: \"Sender\", key: \"sender\"},\n    { label: \"Receiver\", key: \"receiver\"},\n    { label: \"Messages\", key: \"messages\" },\n  ];\n\n\n\n  return (\n    <>\n      <AdminNav />\n      <div className=\"admin-convos\">\n        <section>\n          <h1>Samtaler</h1>\n\n          {/*<!-- Search bar -->\n          <!-- Retrived from https://mdbootstrap.com/docs/standard/forms/search/-->*/}\n          <div className=\"search-group input-group rounded\">\n            <input\n              type=\"search\"\n              className=\"form-control rounded\"\n              placeholder=\"Søk\"\n              aria-label=\"Search\"\n              aria-describedby=\"search-addon\"\n            />\n            <button type=\"button\" className=\"btn btn-outline-primary\">\n              søk\n            </button>\n            <p>\n              Sorter etter:\n              <select defaultValue={\"\"}>\n                <option value=\"\" disabled hidden>\n                  Velg\n                </option>\n                <option value=\"dato\">Dato</option>\n                <option value=\"navn\">Navn</option>\n              </select>\n            </p>\n          </div>\n        </section>\n\n        {/*<!-- List of conversetions -->*/}\n        <div className=\"row conversation-list\">\n          {conversations.map((conversation, i) => (\n            <div key={i} className=\"col-sm-6 \">\n              {/*<!-- Conversation participants -->*/}\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  {/*<!-- Date -->*/}\n                  <a className=\"convo-date\" href=\"./samtaler\">\n                    {conversation.createdAtText}\n                  </a>\n                  {/*<!-- Conversation participants -->*/}\n                  <div className=\"participants\">\n                    <div className=\"participant\">\n                      <img\n                        src={dummyProfile}\n                        alt=\"P\"\n                        className=\"rounded-circle\"\n                      />\n                      <div className=\"ms-3\">\n                        <p className=\"fw-bold mb-1\">\n                          {conversation.fromData.firstName}{\" \"}\n                          {conversation.fromData.lastName}\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"participant d-flex align-items-center\">\n                      <img\n                        src={dummyProfile}\n                        alt=\"P\"\n                        className=\"rounded-circle\"\n                      />\n                      <div className=\"ms-3\">\n                        <p className=\"fw-bold mb-1\">\n                          {conversation.toData.firstName}{\" \"}\n                          {conversation.toData.lastName}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                {/*<!-- Buttons -->*/}\n                <div className=\"text-end\">{/* CSV download link */}\n                  <button className=\"btn-download btn-link btn-rounded btn-sm\">\n                    <CSVLink data={csvData} headers={headers}>\n                      Last ned samtale\n                    </CSVLink>\n                  </button>\n                  <button className=\"btn-delete btn-link btn-rounded btn-sm\">\n                    Slett samtale\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n        </div>\n\n        {/*<!-- List of conversetions -->*/}\n        <div className=\"row conversation-list\">\n          <div className=\"col-sm-6 \">\n            {/*<!-- Conversation participants -->*/}\n            <div className=\"card\">\n              <div className=\"card-body\">\n                {/*<!-- Date -->*/}\n                <a className=\"convo-date\" href=\"./samtaler\">\n                  Dato\n                </a>\n                {/*<!-- Conversation participants -->*/}\n                <div className=\"participants\">\n                  <div className=\"participant\">\n                    <img\n                      src={dummyProfile}\n                      alt=\"P\"\n                      className=\"rounded-circle\"\n                    />\n                    <div className=\"ms-3\">\n                      <p className=\"fw-bold mb-1\">Person En</p>\n                    </div>\n                  </div>\n\n                  <div className=\"participant d-flex align-items-center\">\n                    <img\n                      src={dummyProfile}\n                      alt=\"P\"\n                      className=\"rounded-circle\"\n                    />\n                    <div className=\"ms-3\">\n                      <p className=\"fw-bold mb-1\">Person To</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/*<!-- Buttons -->*/}\n                <div className=\"text-end\">\n                  <button className=\"btn-download btn-link btn-rounded btn-sm\">\n                    Last ned samtale\n                  </button>\n                  <button className=\"btn-delete btn-link btn-rounded btn-sm\">\n                    Slett samtale\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"master-buttons\">\n          <button className=\"btn-download-all\">Last ned alle</button>\n          <button className=\"btn-delete-all\">Slett alle</button>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/fatima/Documents/bachelor-metchat/client/src/admin/Users.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/APIRoutes.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/AdminNav.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/login.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/MainNav.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/Register.jsx",[],[],{"ruleId":"76","severity":1,"message":"77","line":37,"column":13,"nodeType":"78","endLine":37,"endColumn":41},{"ruleId":"76","severity":1,"message":"77","line":50,"column":15,"nodeType":"78","endLine":50,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":11,"column":6,"nodeType":"81","messageId":"82","endLine":11,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":35,"column":18,"nodeType":"81","messageId":"82","endLine":35,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":106,"column":13,"nodeType":"78","endLine":106,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":115,"column":9,"nodeType":"78","endLine":115,"endColumn":20},{"ruleId":"79","severity":1,"message":"84","line":5,"column":43,"nodeType":"81","messageId":"82","endLine":5,"endColumn":55},{"ruleId":"79","severity":1,"message":"85","line":12,"column":6,"nodeType":"81","messageId":"82","endLine":12,"endColumn":10},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","'interests' is assigned a value but never used.","'messageRoute' is defined but never used.","'self' is assigned a value but never used."]