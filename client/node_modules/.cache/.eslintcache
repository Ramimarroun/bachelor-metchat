[{"/Users/fatima/Documents/bachelor-metchat/client/src/index.js":"1","/Users/fatima/Documents/bachelor-metchat/client/src/App.js":"2","/Users/fatima/Documents/bachelor-metchat/client/src/MoreInfo.jsx":"3","/Users/fatima/Documents/bachelor-metchat/client/src/Welcome.jsx":"4","/Users/fatima/Documents/bachelor-metchat/client/src/test_pages/Register.jsx":"5","/Users/fatima/Documents/bachelor-metchat/client/src/APIRoutes.js":"6","/Users/fatima/Documents/bachelor-metchat/client/src/components/login.jsx":"7","/Users/fatima/Documents/bachelor-metchat/client/src/components/Register.jsx":"8","/Users/fatima/Documents/bachelor-metchat/client/src/components/Login.jsx":"9"},{"size":539,"mtime":1681153577227,"results":"10","hashOfConfig":"11"},{"size":639,"mtime":1681153577224,"results":"12","hashOfConfig":"11"},{"size":1609,"mtime":1681153577225,"results":"13","hashOfConfig":"11"},{"size":4598,"mtime":1681153577226,"results":"14","hashOfConfig":"11"},{"size":4064,"mtime":1680710764194,"results":"15","hashOfConfig":"11"},{"size":460,"mtime":1680710764105,"results":"16","hashOfConfig":"11"},{"size":3999,"mtime":1681153577226,"results":"17","hashOfConfig":"11"},{"size":3595,"mtime":1681153577226,"results":"18","hashOfConfig":"11"},{"size":4013,"mtime":1680889244456,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"590u47",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fatima/Documents/bachelor-metchat/client/src/index.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/App.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/MoreInfo.jsx",["48","49"],[],"/Users/fatima/Documents/bachelor-metchat/client/src/Welcome.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/test_pages/Register.jsx",["50"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { authenticationRoute } from \"../APIRoutes\";\n\n\nexport default function Register() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        confirmEmail: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n  \n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };    \n  \n    const handleValidation = () => {\n        const { fname, lname, email, confirmEmail, password, confirmPassword } = values;\n        if (password !== confirmPassword) {\n            alert(\"Password and confirm password are not the same.\");\n            return false;\n        }\n        else if (email !== confirmEmail) {\n            alert(\"E-mail and confirm e-mail should be same.\",);\n            return false;   \n        }\n        else if (fname.length < 3) {\n            alert(\"Firstname should be at least 3 characters.\");\n            return false;\n        }\n        else if (lname.length < 3) {\n            alert(\"Lastname should be at least 3 characters.\");\n            return false;    \n        }\n        else if (!/^[a-zA-Z()]+$/.test(fname) || !/^[a-zA-Z()]+$/.test(lname)){\n            alert(\"Your name can only include letters within the english alphabet.\");\n            return false;    \n        }\n        else if (password.length < 8) {\n            alert(\"Password should be equal to or greater than 8 characters.\");\n            return false;\n        }\n        else if (email === \"\") {\n            alert(\"Email is required.\");\n            return false;\n        }\n        return true;\n    };\n  \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (handleValidation()) {\n            const { fname, lname, email, password } = values;\n            const { data } = await axios.post(`${authenticationRoute}/register`, {\n                firstName : fname,\n                lastName : lname,\n                email,\n                password,\n            });\n            \n            if (data.status === 500 || data.status === false) {\n                alert(data.msg);\n            }\n            else if (data.status === true) {\n                localStorage.setItem(\n                    \"nlpchat-user\",\n                    JSON.stringify(data.user)\n                );\n                alert(\"User created\");\n            }\n        };\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <h1>Registrer deg</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"First name\"\n                    name=\"fname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"Last name\"\n                    name=\"lname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email confirmation\"\n                    name=\"confirmEmail\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <button type=\"submit\">Register User</button>\n            </form>\n        </div>\n    );\n}\n","/Users/fatima/Documents/bachelor-metchat/client/src/APIRoutes.js",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/login.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/Register.jsx",[],[],"/Users/fatima/Documents/bachelor-metchat/client/src/components/Login.jsx",[],[],{"ruleId":"51","severity":1,"message":"52","line":13,"column":13,"nodeType":"53","endLine":13,"endColumn":24},{"ruleId":"51","severity":1,"message":"52","line":36,"column":13,"nodeType":"53","endLine":36,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":8,"column":11,"nodeType":"56","messageId":"57","endLine":8,"endColumn":19},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar"]