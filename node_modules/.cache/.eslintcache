[{"/Users/fatima/Documents/bachelor-metchat/src/index.js":"1","/Users/fatima/Documents/bachelor-metchat/src/reportWebVitals.js":"2","/Users/fatima/Documents/bachelor-metchat/src/App.js":"3","/Users/fatima/Documents/bachelor-metchat/src/APIRoutes.js":"4","/Users/fatima/Documents/bachelor-metchat/src/test_pages/Register.jsx":"5","/Users/fatima/Documents/bachelor-metchat/src/Welcome.jsx":"6","/Users/fatima/Documents/bachelor-metchat/src/components/Login.jsx":"7"},{"size":539,"mtime":1679920659754,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1679917803642,"results":"10","hashOfConfig":"11"},{"size":545,"mtime":1679920659753,"results":"12","hashOfConfig":"9"},{"size":460,"mtime":1679920659753,"results":"13","hashOfConfig":"9"},{"size":4091,"mtime":1680164583919,"results":"14","hashOfConfig":"9"},{"size":5257,"mtime":1679920659754,"results":"15","hashOfConfig":"9"},{"size":2517,"mtime":1679920659754,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15rb5pb",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"t55pti",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fatima/Documents/bachelor-metchat/src/index.js",[],[],"/Users/fatima/Documents/bachelor-metchat/src/reportWebVitals.js",[],[],"/Users/fatima/Documents/bachelor-metchat/src/App.js",[],[],"/Users/fatima/Documents/bachelor-metchat/src/APIRoutes.js",[],[],"/Users/fatima/Documents/bachelor-metchat/src/test_pages/Register.jsx",["39"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { authenticationRoute } from \"../APIRoutes\";\nimport 'core-js/es/array';\n\n\nexport default function Register() {\n    const navigate = useNavigate();\n    const [values, setValues] = useState({\n        fname: \"\",\n        lname: \"\",\n        email: \"\",\n        confirmEmail: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n  \n    const handleChange = (event) => {\n        setValues({ ...values, [event.target.name]: event.target.value });\n    };    \n  \n    const handleValidation = () => {\n        const { fname, lname, email, confirmEmail, password, confirmPassword } = values;\n        if (password !== confirmPassword) {\n            alert(\"Password and confirm password are not the same.\");\n            return false;\n        }\n        else if (email !== confirmEmail) {\n            alert(\"E-mail and confirm e-mail should be same.\",);\n            return false;   \n        }\n        else if (fname.length < 3) {\n            alert(\"Firstname should be at least 3 characters.\");\n            return false;\n        }\n        else if (lname.length < 3) {\n            alert(\"Lastname should be at least 3 characters.\");\n            return false;    \n        }\n        else if (!/^[a-zA-Z()]+$/.test(fname) || !/^[a-zA-Z()]+$/.test(lname)){\n            alert(\"Your name can only include letters within the english alphabet.\");\n            return false;    \n        }\n        else if (password.length < 8) {\n            alert(\"Password should be equal to or greater than 8 characters.\");\n            return false;\n        }\n        else if (email === \"\") {\n            alert(\"Email is required.\");\n            return false;\n        }\n        return true;\n    };\n  \n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        if (handleValidation()) {\n            const { fname, lname, email, password } = values;\n            const { data } = await axios.post(`${authenticationRoute}/register`, {\n                firstName : fname,\n                lastName : lname,\n                email,\n                password,\n            });\n            \n            if (data.status === 500 || data.status === false) {\n                alert(data.msg);\n            }\n            else if (data.status === true) {\n                localStorage.setItem(\n                    \"nlpchat-user\",\n                    JSON.stringify(data.user)\n                );\n                alert(\"User created\");\n            }\n        };\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => handleSubmit(e)}>\n                <h1>Registrer deg</h1>\n                <input\n                    type=\"text\"\n                    placeholder=\"First name\"\n                    name=\"fname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"Last name\"\n                    name=\"lname\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"email\"\n                    placeholder=\"Email confirmation\"\n                    name=\"confirmEmail\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"confirmPassword\"\n                    onChange={(e) => handleChange(e)}\n                /><br />\n                <button type=\"submit\">Register User</button>\n            </form>\n        </div>\n    );\n}\n","/Users/fatima/Documents/bachelor-metchat/src/Welcome.jsx",["40","41","42","43","44","45"],[],"/Users/fatima/Documents/bachelor-metchat/src/components/Login.jsx",[],[],{"ruleId":"46","severity":1,"message":"47","line":9,"column":11,"nodeType":"48","messageId":"49","endLine":9,"endColumn":19},{"ruleId":"46","severity":1,"message":"50","line":1,"column":10,"nodeType":"48","messageId":"49","endLine":1,"endColumn":18},{"ruleId":"46","severity":1,"message":"51","line":1,"column":20,"nodeType":"48","messageId":"49","endLine":1,"endColumn":29},{"ruleId":"46","severity":1,"message":"52","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":14},{"ruleId":"46","severity":1,"message":"53","line":2,"column":16,"nodeType":"48","messageId":"49","endLine":2,"endColumn":27},{"ruleId":"46","severity":1,"message":"54","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"55","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":22},"no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'useNavigate' is defined but never used.","'axios' is defined but never used.","'welcomeRoute' is defined but never used."]